name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  ubuntu-2004:
    strategy:
      fail-fast: false
      matrix:
        include:
          - tool: scons
            cc: gcc
            cxx: g++
            cfg: release
            lto: true
          - tool: cmake
            cc: clang
            cxx: clang++
            cfg: debug
            lto: false
    runs-on: ubuntu-20.04
    container:
      image: wesnoth/wesnoth:2204-master
      options: --tty # docker create options
      env:
        TOOL: ${{ matrix.tool }}
        CFG: ${{ matrix.cfg }}
        CC: ${{ matrix.cc }}
        CXX: ${{ matrix.cxx }}
        CXX_STD: 17
        LTO: ${{ matrix.lto }}
        NLS: false
        CLICOLOR_FORCE: 1
        DISPLAY: :99.0
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Build wesnoth, wesnothd, campaignd and unit tests
        id: build # needed to check step outcome
        run: |
          case $TOOL in
            scons)
              scons wesnoth wesnothd campaignd boost_unit_tests \
                build="$CFG" ctool="$CC" cxxtool="$CXX" cxx_std="$CXX_STD" \
                extra_flags_config="-pipe" strict=true forum_user_handler=true \
                nls="$NLS" enable_lto="$LTO" force_color=true jobs=2 --debug=time
              ;;
            cmake)
              cmake -DENABLE_GAME=true -DENABLE_SERVER=true -DENABLE_CAMPAIGN_SERVER=true \
                -DENABLE_TESTS=true -DCMAKE_BUILD_TYPE="$CFG" -DCXX_STD="$CXX_STD" \
                -DEXTRA_FLAGS_CONFIG="-pipe" -DENABLE_STRICT_COMPILATION=true -DENABLE_MYSQL=true \
                -DENABLE_NLS="$NLS" -DFORCE_COLOR_OUTPUT=true -DENABLE_LTO="$LTO" -DLTO_JOBS=2 .
              make conftests
              make VERBOSE=1 -j2
              ;;
          esac
#      - name: Rename debug binaries
#        if: matrix.cfg == 'debug'
#        run: mv wesnoth{-debug,}; mv wesnothd{-debug,}; mv campaignd{-debug,}; mv boost_unit_tests{-debug,}
      - name: Start Xvfb
        if: success() || failure()
        run: start-stop-daemon --start --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1024x768x24
      - name: Whitespace and WML indentation check
        if: success() || failure()
        run: |
          git config --global --add safe.directory '*'
          ./utils/CI/fix_whitespace.sh; git status; (( $(git status --short | wc -l) == 0 ))
      - name: Run luacheck
        if: success() || failure()
        run: luacheck .
      - name: Doxygen check
        if: success() || failure()
        run: ./utils/CI/doxygen-check.sh
      - name: WML validation
        if: success() || steps.build.outcome == 'success'
        run: ./utils/CI/schema_validation.sh
      - name: Run WML tests
        if: success() || steps.build.outcome == 'success'
        run: ./run_wml_tests -g -c -t 20
      - name: Run play tests
        if: success() || steps.build.outcome == 'success'
        run: ./utils/CI/play_test_executor.sh
      - name: Run MP tests
        if: success() || steps.build.outcome == 'success'
        run: ./utils/CI/mp_test_executor.sh
      - name: Run unit tests
        if: success() || steps.build.outcome == 'success'
        run: ./run_boost_tests

  steam-runtime:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Steam Runtime
        run: |
          export BRANCH=master
          export IMAGE=steamrt
          export NLS=false
          export TOOL=scons
          export CC=gcc-9
          export CXX=g++-9
          export CXX_STD=17
          export CFG=release
          export LTO=false
          export CLICOLOR_FORCE=1
          ./.github/workflows/ci-scripts/ubuntu.sh

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: Steam-Linux
          path: |
            ~/steambuild-*.tar

  mingw:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: MinGW Crosscompile
        run: |
          export BRANCH=master
          export IMAGE=mingw
          export NLS=false
          export TOOL=scons
          export CC=gcc
          export CXX=g++
          export CXX_STD=17
          export CFG=release
          export LTO=false
          export CLICOLOR_FORCE=1
          ./.github/workflows/ci-scripts/ubuntu.sh

      - name: Upload 1
        uses: actions/upload-artifact@v2
        with:
          name: Source
          path: |
            ~/wesnoth-*.tar.bz2

      - name: Upload 2
        uses: actions/upload-artifact@v2
        with:
          name: Windows-Installer
          path: |
            ~/wesnoth-*-win64.exe

  flatpak:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Flatpak
        run: |
          export BRANCH=master
          export IMAGE=flatpak
          export NLS=false
          export TOOL=scons
          export CC=gcc
          export CXX=g++
          export CXX_STD=17
          export CFG=release
          export LTO=false
          export CLICOLOR_FORCE=1
          ./.github/workflows/ci-scripts/ubuntu.sh

  translations:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Translations
        run: |
          export BRANCH=master
          export IMAGE=2204
          export NLS=only
          export TOOL=scons
          export CC=gcc
          export CXX=g++
          export CXX_STD=17
          export CFG=release
          export LTO=false
          export CLICOLOR_FORCE=1
          ./.github/workflows/ci-scripts/ubuntu.sh

  macos-intel:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-11.0
            cfg: Debug
          - os: macos-11.0
            cfg: Release
    runs-on: ${{ matrix.os }}
    env:
      CFG: ${{ matrix.cfg }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Get dependencies
        run: |
          HOMEBREW_NO_AUTO_UPDATE=1 brew install scons
          ./projectfiles/Xcode/Fix_Xcode_Dependencies
      - name: Build translations
        run: scons translations build=release --debug=time nls=true jobs=2
      - name: Build wesnoth and unit tests
        working-directory: projectfiles/Xcode
        run: xcodebuild ARCHS=x86_64 -project "The Battle for Wesnoth.xcodeproj" -target "The Battle for Wesnoth" -target "unit_tests" -configuration "$CFG"
#      - name: Create disk image
#        working-directory: projectfiles/Xcode
#        run: hdiutil create -volname "Wesnoth_$CFG" -fs 'HFS+' -srcfolder "build/$CFG" -ov -format UDBZ "Wesnoth_${CFG}.dmg"
      - name: Run WML tests
        if: matrix.cfg == 'Release'
        run: ./run_wml_tests -g -c -t 30 -p "projectfiles/Xcode/build/$CFG/The Battle for Wesnoth.app/Contents/MacOS/The Battle for Wesnoth"
      - name: Run unit tests
        run: ./run_boost_tests --path=projectfiles/Xcode/build/"$CFG" --executable=unit_tests

  windows:
    strategy:
      fail-fast: false
      matrix:
        cfg: [Debug, Release]
    env:
      CFG: ${{ matrix.cfg }}
    defaults:
      run:
        shell: cmd
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Cache object files
        id: windows-cache
        uses: actions/cache@v2
        with:
          path: |
            D:/a/wesnoth/vcpkg
            D:/a/wesnoth/wesnoth/vcpkg_installed
          key: win-cache-0008

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Build vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git D:/a/wesnoth/vcpkg
          cd D:/a/wesnoth/vcpkg
          D:/a/wesnoth/vcpkg/bootstrap-vcpkg.bat

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.9
        with:
          cmake-version: '3.20.6'

      - name: Run cmake
        run: |
          cmake -DCMAKE_BUILD_TYPE=%CFG% -DENABLE_GAME=true -DENABLE_SERVER=true -DENABLE_CAMPAIGN_SERVER=true -DENABLE_TESTS=true -DENABLE_MYSQL=false -DENABLE_NLS=false -DVCPKG_TARGET_TRIPLET=x64-windows -DCMAKE_TOOLCHAIN_FILE=D:/a/wesnoth/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_GENERATOR_PLATFORM=x64 -G "Visual Studio 16 2019" .

# delete buildtrees directory to free up space after cmake invokes vcpkg to build the dependencies
# otherwise the job was failing when trying to write a .obj file
# building vcpkg on the more spacious C drive didn't work since for some reason vcpkg decides to not create the pango/cairo pkgconfig files there
      - name: Build wesnoth, wesnothd, campaignd and unit tests
        run: |
          rmdir /s /q D:\a\wesnoth\vcpkg\buildtrees
          MSBuild.exe wesnoth.sln -p:Configuration=%CFG%

      - name: Run WML unit tests
        if: matrix.cfg == 'Release'
        run: python run_wml_tests -v -g -c -t 20 -p D:/a/wesnoth/wesnoth/%CFG%/wesnoth.exe

# run after all other jobs have completed to check overall build status
  discord-notification:
    runs-on: ubuntu-20.04

    name: Discord Notification

    needs: [ubuntu-2004, steam-runtime, mingw, flatpak, translations, macos-intel, windows]
    if: always()

    steps:
      - uses: technote-space/workflow-conclusion-action@v2
      - uses: rjstone/discord-webhook-notify@v1
        if: env.WORKFLOW_CONCLUSION == 'failure' && github.event_name == 'push'
        with:
          severity: error
          webhookUrl: ${{ secrets.DISCORD_CI_WEBHOOK }}
          description: |-
            pusher: ${{ github.actor }}
            commit: ${{ github.event.head_commit.message }}
            commit url: ${{ github.event.head_commit.url }}
