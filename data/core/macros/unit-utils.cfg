#textdomain wesnoth
# This file contains unit utility macros for WML authors.
#
# These don't rely on any other macros.   Please don't change this.

# This needs to match the magic UNREACHABLE constant in unit_movement_type
#define UNREACHABLE
99 #enddef

# Use this to restrict a filter to on-map units, not the recall list.
#define NOT_ON_RECALL_LIST
    [not]
        x,y=recall,recall
    [/not]
#enddef

# Rationale for the naming scheme of these generators:
# All generators take SIDE X Y for consistency.
# Those that begin with NAMED_ additionally take ID_STRING NAME_STRING
# The LOYAL_ macros set the loyalty trait.

#define UNIT SIDE TYPE X Y WML
    # Place a unit with embedded WML specified.
    #
    [unit]
        side={SIDE}
        type={TYPE}
        x={X}
        y={Y}
        {WML}
    [/unit]
#enddef

#define GENERIC_UNIT SIDE TYPE X Y
    # Creates a generic unit of TYPE belonging to SIDE at X,Y, which has a
    # random name, gender and traits (just like a recruited unit).
    [unit]
        side={SIDE}
        type={TYPE}
        x={X}
        y={Y}
        generate_name=yes
        random_traits=yes
        random_gender=yes
        upkeep=full
    [/unit]
#enddef

#define NOTRAIT_UNIT SIDE TYPE X Y
    # Creates a unit with no traits, random gender and generated name.
    #
    # Example:
    #! {NOTRAIT_UNIT 1 (Elvish Fighter) 19 16}
    #
    [unit]
        side={SIDE}
        type={TYPE}
        x={X}
        y={Y}
        generate_name=yes
        random_traits=no
        random_gender=yes
    [/unit]
#enddef

#define LOYAL_UNIT SIDE TYPE X Y
    # Creates a unit with the Loyal trait.
    #
    # Example:
    #! {LOYAL_UNIT 1 (Elvish Fighter) 19 16}
    #
    [unit]
        type={TYPE}
        side={SIDE}
        x={X}
        y={Y}
        generate_name=yes
        [modifications]
            {TRAIT_LOYAL}
        [/modifications]
    [/unit]
#enddef

#define NAMED_UNIT SIDE TYPE X Y ID_STRING NAME_STRING WML
    # Place a named unit with embedded WML specified.
    #
    [unit]
        side={SIDE}
        type={TYPE}
        x={X}
        y={Y}
        id={ID_STRING}
        name={NAME_STRING}
        {WML}
    [/unit]
#enddef

#define NAMED_LOYAL_UNIT SIDE TYPE X Y ID_STRING NAME_STRING
    # Creates a unit with the Loyal trait.
    #
    # Example:
    #! {NAMED_LOYAL_UNIT 1 (Elvish Fighter) 19 16 (Myname) ( _ "Myname")}
    #
    [unit]
        side={SIDE}
        type={TYPE}
        id={ID_STRING}
        name={NAME_STRING}
        x={X}
        y={Y}
        [modifications]
            {TRAIT_LOYAL}
        [/modifications]
        overlays="misc/loyal-icon.png"
    [/unit]
#enddef

#define NAMED_GENERIC_UNIT SIDE TYPE X Y ID_STRING NAME_STRING
    # Creates a generic unit of TYPE belonging to SIDE at X,Y, which has a
    # generated gender and traits (just like a recruited unit).
    [unit]
        side={SIDE}
        type={TYPE}
        id={ID_STRING}
        name={NAME_STRING}
        x={X}
        y={Y}
        random_traits=yes
        random_gender=yes
        upkeep=full
    [/unit]
#enddef

#define NAMED_NOTRAIT_UNIT SIDE TYPE X Y ID_STRING NAME_STRING
    # Creates a unit with no traits, random gender and specified name.
    #
    # Example:
    #! {NAMED_NOTRAIT_UNIT 1 (Elvish Fighter) 20 22 (Mochi) (_"Mochi") }
    #
    [unit]
        side={SIDE}
        type={TYPE}
        id={ID_STRING}
        name={NAME_STRING}
        x={X}
        y={Y}
        random_traits=no
        random_gender=yes
    [/unit]
#enddef

#define RECALL ID_STRING
    [recall]
        id={ID_STRING}
    [/recall]
#enddef

#define RECALL_XY ID_STRING X Y
    # Note that id precedes x and y, unlike with the unit-generating macros.
    [recall]
        id={ID_STRING}
        x={X}
        y={Y}
    [/recall]
#enddef

#define GUARDIAN
    # Meant to be used as a suffix to a unit-generating macro call.
    [+unit]
        ai_special=guardian
    [/unit]
#enddef

#define NO_UPKEEP
    # Meant to be used as a suffix to a unit-generating macro call.
    # Use this when you don't want to use up a traits slot.
    [+unit]
        [+modifications]
            {TRAIT_LOYAL}
            [+trait]
                male_name=""
                female_name=""
            [/trait]
        [/modifications]
    [/unit]
#enddef

#define FACING DIRECTION
    # Meant to be used as a suffix to a unit-generating macro call.
    [+unit]
        facing={DIRECTION}
    [/unit]
#enddef

#define VARIATION VARIATION_NAME
    # Meant to be used as a suffix to a unit-generating macro call.
    [+unit]
        variation={VARIATION_NAME}
    [/unit]
#enddef

#define STORE_UNIT_VAR FILTER VAR TO_VAR_NAME
    # Stores an attribute of a unit to the given variable.
    #
    # Example where this is used to flip all orcs to whatever side James is on:
    #! {STORE_UNIT_VAR (id=James) side side_of_James}
    #! {MODIFY_UNIT (race=orc) side $side_of_James}
    #! {CLEAR_VARIABLE side_of_James}
    [store_unit]
        [filter]
            {FILTER}
        [/filter]

        kill=no
        variable=STORE_UNIT_VAR_store
    [/store_unit]

    [set_variable]
        name={TO_VAR_NAME}
        value=$STORE_UNIT_VAR_store.{VAR}
    [/set_variable]

    [clear_variable]
        name=STORE_UNIT_VAR_store
    [/clear_variable]
#enddef

#define ADVANCE_UNIT FILTER ID_STRING
    # Advances all units matching the filter to ID_STRING or if missing, their normal advancement
    #
    # Example to advance all spearmen to a cavalrymen:
    #! {ADVANCE_UNIT type=Spearman Cavalryman}
    # Example to advance your leader normally:
    #! {ADVANCE_UNIT canrecruit,side=yes,1 ""}

    [modify_unit]
        [filter]
            {FILTER}
        [/filter]
        type={ID_STRING}
    [/modify_unit]
#enddef

#define TRANSFORM_UNIT FILTER TYPE
    # Transforms all units matching the filter into TYPE or if missing, their normal advancement
    # Keeps the unit's hitpoints, experience and status intact.
    #
    # Example to turn all spearmen into cavalrymen:
    #! {TRANSFORM_UNIT type=Spearman Cavalryman}

    [transform_unit]
        {FILTER}
        transform_to={TYPE}
    [/transform_unit]
#enddef

#define FORMATION ID GREATER_THAN COUNT
    [chance_to_hit]
        id={ID}
        apply_to=opponent
        sub=10
        [filter_base_value]
            greater_than_equal_to={GREATER_THAN}
        [/filter_base_value]
        [filter_self]
            [filter_adjacent]
                is_enemy=no
                count={COUNT}
                ability=formation
            [/filter_adjacent]
        [/filter_self]
    [/chance_to_hit]
#enddef

# Support ability
#define MACRO_ABILITY_SUPPORT_EVENTS
    [event]
        name=unit placed
        id=ability_support_event_1
        first_time_only=no

        [filter]
            side=1

            [not]
                level=0
            [/not]

            [filter_wml]
                upkeep=full
            [/filter_wml]

            [filter_adjacent]
                ability=support
            [/filter_adjacent]
        [/filter]

        {VARIABLE unit.variables.original_upkeep $unit.upkeep}
        {VARIABLE unit.variables.upkeep_supported yes}
        {VARIABLE unit.upkeep "$($unit.level - 1)"}

        [unstore_unit]
            variable=unit
            find_vacant=no
            fire_event=no
        [/unstore_unit]
    [/event]

    [event]
        name=set_support_upkeep
        id=ability_support_event_2
        first_time_only=no

        [foreach]
            array=update_support_units
            variable=support_unit

            [do]
                [if]
                    [have_unit]
                        x,y=$support_unit.x,$support_unit.y

                        [not]
                            level=0
                        [/not]

                        [filter_wml]
                            upkeep=full
                        [/filter_wml]

                        [filter_adjacent]
                            ability=support
                        [/filter_adjacent]
                    [/have_unit]

                    [then]
                        {VARIABLE support_unit.variables.original_upkeep $support_unit.upkeep}
                        {VARIABLE support_unit.variables.upkeep_supported yes}
                        {VARIABLE support_unit.upkeep "$($support_unit.level - 1)"}
                    [/then]

                    [else]
                        [if]
                            [have_unit]
                                x,y=$support_unit.x,$support_unit.y

                                [not]
                                    level=0
                                [/not]

                                [filter_wml]
                                    [variables]
                                        upkeep_supported=yes
                                    [/variables]
                                [/filter_wml]

                                [not]
                                    [filter_adjacent]
                                        ability=support
                                    [/filter_adjacent]
                                [/not]
                            [/have_unit]

                            [then]
                                {VARIABLE support_unit.upkeep $support_unit.variables.original_upkeep}
                                {VARIABLE support_unit.variables.upkeep_supported no}
                            [/then]

                            [else]
                                [continue][/continue]
                            [/else]
                        [/if]
                    [/else]
                [/if]

                [unstore_unit]
                    variable=support_unit
                    find_vacant=no
                    fire_event=no
                [/unstore_unit]
            [/do]
        [/foreach]
    [/event]

    [event]
        name=moveto
        id=ability_support_event_3
        first_time_only=no

        [filter]
            side=1
            ability=support
        [/filter]

        [store_unit]
            [filter]
                [filter_wml]
                    upkeep=full
                [/filter_wml]

                [filter_adjacent]
                    x,y=$x1,$y1
                [/filter_adjacent]

                [or]
                    [filter_wml]
                        [variables]
                            upkeep_supported=yes
                        [/variables]
                    [/filter_wml]

                    [filter_location]
                        [filter_adjacent_location]
                            x,y=$x2,$y2
                        [/filter_adjacent_location]
                    [/filter_location]
                [/or]
            [/filter]

            kill=no
            variable=update_support_units
        [/store_unit]

        [fire_event]
            name=set_support_upkeep
        [/fire_event]

        {CLEAR_VARIABLE update_support_units}

        [on_undo]
            [store_unit]
                [filter]
                    [filter_wml]
                        upkeep=full
                    [/filter_wml]

                    [filter_location]
                        [filter_adjacent_location]
                            x,y=$x2,$y2
                        [/filter_adjacent_location]
                    [/filter_location]

                    [or]
                        [filter_wml]
                            [variables]
                                upkeep_supported=yes
                            [/variables]
                        [/filter_wml]

                        [filter_location]
                            [filter_adjacent_location]
                                x,y=$x1,$y1
                            [/filter_adjacent_location]
                        [/filter_location]
                    [/or]
                [/filter]

                kill=no
                variable=update_support_units
            [/store_unit]

            [fire_event]
                name=set_support_upkeep
            [/fire_event]

            {CLEAR_VARIABLE update_support_units}
        [/on_undo]

        [allow_undo]
        [/allow_undo]
    [/event]

    [event]
        name=moveto
        id=ability_support_event_4
        first_time_only=no

        [filter]
            side=1

            [not]
                ability=support
            [/not]

            [and]
                [filter_wml]
                    upkeep=full
                [/filter_wml]

                [filter_adjacent]
                    side=1
                    ability=support
                [/filter_adjacent]

                [or]
                    [filter_wml]
                        [variables]
                            upkeep_supported=yes
                        [/variables]
                    [/filter_wml]

                    [not]
                        [filter_adjacent]
                            side=1
                            ability=support
                        [/filter_adjacent]
                    [/not]
                [/or]
            [/and]
        [/filter]

        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]

            kill=no
            variable=update_support_units
        [/store_unit]

        [fire_event]
            name=set_support_upkeep
        [/fire_event]

        {CLEAR_VARIABLE update_support_units}

        [on_undo]
            [store_unit]
                [filter]
                    x,y=$x2,$y2
                [/filter]

                kill=no
                variable=update_support_units
            [/store_unit]

            [fire_event]
                name=set_support_upkeep
            [/fire_event]

            {CLEAR_VARIABLE update_support_units}
        [/on_undo]

        [allow_undo]
        [/allow_undo]
    [/event]

    [event]
        name=die,post advance
        id=ability_support_event_5
        first_time_only=no

        [filter]
            side=1
            ability=support
        [/filter]

        [store_unit]
            [filter]
                side=1

                [filter_adjacent]
                    x,y=$x1,$y1
                [/filter_adjacent]
            [/filter]

            kill=no
            variable=update_support_units
        [/store_unit]

        [fire_event]
            name=set_support_upkeep
        [/fire_event]

        {CLEAR_VARIABLE update_support_units}
    [/event]

    [event]
        name=post advance
        id=ability_support_event_6
        first_time_only=no

        [filter]
            side=1

            [filter_adjacent]
                ability=support
            [/filter_adjacent]
        [/filter]

        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]

            kill=no
            variable=update_support_units
        [/store_unit]

        [fire_event]
            name=set_support_upkeep
        [/fire_event]

        {CLEAR_VARIABLE update_support_units}
    [/event]
#enddef

# Disengage ability
#define MACRO_ABILITY_DISENGAGE_EVENTS
    [event]
        name=attack end
        id=disengage_event
        first_time_only=no

        [filter]
            ability=disengage

            [not]
                [filter_wml]
                    moves=$this_unit.max_moves
                [/filter_wml]
            [/not]
        [/filter]

        {VARIABLE unit.moves 0}

        [unstore_unit]
            variable=unit
            find_vacant=no
        [/unstore_unit]
    [/event]
#enddef

# Daze weapon special
#define MACRO_WEAPON_SPECIAL_DAZE_EVENTS
    [event]
        id=weapon_special_daze_event_1
        name=unit placed
        first_time_only=no

        [filter]
            [not]
                [has_attack]
                    special_id=enemy_dazed
                [/has_attack]
            [/not]
        [/filter]

        [object]
            silent=yes

            [filter]
                x,y=$x1,$y1
            [/filter]

            [effect]
                apply_to=attack
                [not]
                    special_id=magical
                [/not]
                [not]
                    special_id=marksman
                [/not]
                [not]
                    special_id=enemy_dazed
                [/not]

                [set_specials]
                    mode=append

                    [chance_to_hit]
                        id=enemy_dazed
                        name=""
                        description=""
                        add=10
                        [filter_opponent]
                            [filter_wml]
                                [status]
                                    dazed=yes
                                [/status]
                            [/filter_wml]
                        [/filter_opponent]
                    [/chance_to_hit]
                [/set_specials]
            [/effect]
            [effect]
                apply_to=attack
                special_id=marksman
                [and]
                    special_type=poison
                [/and]
                [not]
                    special_id=enemy_dazed
                [/not]

                # Note: instead of simply appending, we have to use replace and
                # put marksman last because the +10% from daze must be applied
                # first; the other way around, the base value would already be
                # potentially modified by marksman
                [set_specials]
                    mode=replace

                    [chance_to_hit]
                        id=enemy_dazed
                        name=""
                        description=""
                        add=10
                        active_on=offense
                        [filter_base_value]
                            greater_than_equal_to=60
                        [/filter_base_value]
                        [filter_opponent]
                            [filter_wml]
                                [status]
                                    dazed=yes
                                [/status]
                            [/filter_wml]
                        [/filter_opponent]
                    [/chance_to_hit]
                    {WEAPON_SPECIAL_MARKSMAN}
                    {WEAPON_SPECIAL_POISON}
                    [chance_to_hit]
                        id=enemy_dazed_marksman_defense
                        name=""
                        description=""
                        add=10
                        active_on=defense
                        [filter_opponent]
                            [filter_wml]
                                [status]
                                    dazed=yes
                                [/status]
                            [/filter_wml]
                        [/filter_opponent]
                    [/chance_to_hit]
                [/set_specials]
            [/effect]
            [effect]
                apply_to=attack
                special_id=marksman
                [not]
                    special_type=poison
                [/not]
                [not]
                    special_id=enemy_dazed
                [/not]

                # Note: instead of simply appending, we have to use replace and
                # put marksman last because the +10% from daze must be applied
                # first; the other way around, the base value would already be
                # potentially modified by marksman
                [set_specials]
                    mode=replace

                    [chance_to_hit]
                        id=enemy_dazed
                        name=""
                        description=""
                        add=10
                        active_on=offense
                        [filter_base_value]
                            greater_than_equal_to=60
                        [/filter_base_value]
                        [filter_opponent]
                            [filter_wml]
                                [status]
                                    dazed=yes
                                [/status]
                            [/filter_wml]
                        [/filter_opponent]
                    [/chance_to_hit]
                    {WEAPON_SPECIAL_MARKSMAN}
                    [chance_to_hit]
                        id=enemy_dazed_marksman_defense
                        name=""
                        description=""
                        add=10
                        active_on=defense
                        [filter_opponent]
                            [filter_wml]
                                [status]
                                    dazed=yes
                                [/status]
                            [/filter_wml]
                        [/filter_opponent]
                    [/chance_to_hit]
                [/set_specials]
            [/effect]
        [/object]
    [/event]

    [event]
        id=weapon_special_daze_event_2
        name=attacker hits
        first_time_only=no

        [filter_attack]
            special=daze
        [/filter_attack]

        [filter_second]
            [not]
                [filter_wml]
                    [status]
                        dazed=yes
                    [/status]
                [/filter_wml]
            [/not]
        [/filter_second]

        {VARIABLE second_unit.status.dazed yes}

        [unstore_unit]
            variable=second_unit
            find_vacant=no
            text= _ "dazed"
            female_text = _ "female^dazed"
            red,green,blue=196,196,128
        [/unstore_unit]

        [modify_unit]
            [filter]
                [filter_wml]
                    [status]
                        dazed=yes
                    [/status]
                [/filter_wml]
            [/filter]
            [object]
                duration=turn end
                id="dazed_overlay"
                [effect]
                    apply_to=overlay
                    add="misc/dazed.png"
                [/effect]
            [/object]
        [/modify_unit]

        [object]
            silent=yes

            [filter]
                x,y=$x2,$y2
            [/filter]

            [effect]
                apply_to=attack
                [not]
                    special_id=magical
                [/not]
                [not]
                    special_id=marksman
                [/not]
                [not]
                    special_id=self_dazed
                [/not]

                [set_specials]
                    mode=append

                    [chance_to_hit]
                        id=self_dazed
                        name=""
                        description=""
                        sub=10
                        [filter_self]
                            [filter_wml]
                                [status]
                                    dazed=yes
                                [/status]
                            [/filter_wml]
                        [/filter_self]
                    [/chance_to_hit]
                [/set_specials]
            [/effect]
            [effect]
                apply_to=attack
                special_id=marksman
                [and]
                    special_type=poison
                [/and]
                [not]
                    special_id=self_dazed
                [/not]

                [set_specials]
                    mode=replace

                    [chance_to_hit]
                        id=self_dazed
                        name=""
                        description=""
                        sub=10
                        active_on=offense
                        [filter_base_value]
                            greater_than_equal_to=70
                        [/filter_base_value]
                        [filter_self]
                            [filter_wml]
                                [status]
                                    dazed=yes
                                [/status]
                            [/filter_wml]
                        [/filter_self]
                    [/chance_to_hit]
                    {WEAPON_SPECIAL_MARKSMAN}
                    {WEAPON_SPECIAL_POISON}
                    [chance_to_hit]
                        id=self_dazed_marksman_defense
                        name=""
                        description=""
                        sub=10
                        active_on=defense
                        [filter_self]
                            [filter_wml]
                                [status]
                                    dazed=yes
                                [/status]
                            [/filter_wml]
                        [/filter_self]
                    [/chance_to_hit]
                [/set_specials]
            [/effect]
            [effect]
                apply_to=attack
                special_id=marksman
                [not]
                    special_type=poison
                [/not]
                [not]
                    special_id=self_dazed
                [/not]

                [set_specials]
                    mode=replace

                    [chance_to_hit]
                        id=self_dazed
                        name=""
                        description=""
                        sub=10
                        active_on=offense
                        [filter_base_value]
                            greater_than_equal_to=70
                        [/filter_base_value]
                        [filter_self]
                            [filter_wml]
                                [status]
                                    dazed=yes
                                [/status]
                            [/filter_wml]
                        [/filter_self]
                    [/chance_to_hit]
                    {WEAPON_SPECIAL_MARKSMAN}
                    [chance_to_hit]
                        id=self_dazed_marksman_defense
                        name=""
                        description=""
                        sub=10
                        active_on=defense
                        [filter_self]
                            [filter_wml]
                                [status]
                                    dazed=yes
                                [/status]
                            [/filter_wml]
                        [/filter_self]
                    [/chance_to_hit]
                [/set_specials]
            [/effect]
        [/object]
    [/event]

    [event]
        id=weapon_special_daze_event_3
        name=side turn
        first_time_only=no

        [event]
            name=side turn
            delayed_variable_substitution=no

            #{DEBUG_MSG "side $|side_number turn started, clearing daze from side $side_number units"}

            [modify_unit]
                [filter]
                    side=$side_number
                    [filter_wml]
                        [status]
                            dazed=yes
                        [/status]
                    [/filter_wml]
                [/filter]

                [status]
                    dazed=no
                [/status]
            [/modify_unit]
        [/event]
    [/event]
#enddef

#define QUENOTH_FLAME_INTERNAL X Y Y2
misc/blank-hex.png~BLIT(units/quenoth/mystic/flame-color.png,{X},{Y2})~MASK(units/quenoth/mystic/flame-mask.png,{X},{Y}):75#enddef

#define QUENOTH_FLAME_POS X Y
    {QUENOTH_FLAME_INTERNAL {X} {Y} 15},
    {QUENOTH_FLAME_INTERNAL {X} {Y} 14},
    {QUENOTH_FLAME_INTERNAL {X} {Y} 13},
    {QUENOTH_FLAME_INTERNAL {X} {Y} 12},
    {QUENOTH_FLAME_INTERNAL {X} {Y} 11},
    {QUENOTH_FLAME_INTERNAL {X} {Y} 10},
    {QUENOTH_FLAME_INTERNAL {X} {Y} 9},
    {QUENOTH_FLAME_INTERNAL {X} {Y} 8},
    {QUENOTH_FLAME_INTERNAL {X} {Y} 7},
    {QUENOTH_FLAME_INTERNAL {X} {Y} 6},
    {QUENOTH_FLAME_INTERNAL {X} {Y} 5},
{QUENOTH_FLAME_INTERNAL {X} {Y} 4}#enddef

# Not all unwalkable, but still supposed to provide some visual cue that movement is different.
# This is only used for animation, it's the list of terrains on which the Sun Sylph will fly.
# Both the old ^Uf* and new ^Tf* mushrooms are supported here - if the Quenoth elves are moved
# to core then it seems sensible to still have the old behavior on old maps.
#define QUENOTH_UNWALKABLE_TERRAINS
{DRAKE_UNWALKABLE_TERRAINS},A*^*,Uu*^*,Uh*^*,*^Uf*,Tb*^*,*^Tf*#enddef
