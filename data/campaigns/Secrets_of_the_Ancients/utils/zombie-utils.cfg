#textdomain wesnoth-units
#define WEAPON_SPECIAL_SOTA_PLAGUE
    # Written this way to allow overwriting the base Necromancer weapon in the SotA Necromancer implementation
    [plague]
        id=SotA_plague
        name= _ "plague"
        description= _ "When a unit is killed by a Plague attack, that unit is replaced with a Walking Corpse on the same side as the unit with the Plague attack. This doesnâ€™t work on Undead or units in villages."
        type=null # prevents normal corpse, and allows SotA code to handle it
    [/plague]
#enddef

#textdomain wesnoth-sota
#define ZOMBIE_INIT
    [event]
        name=prestart
        [set_variables]
            name=zombies
            [split]
                list="SotA Flying Corpse_Bat,
                SotA Walking Corpse_Rat,
                SotA Walking Corpse_Wolf,
                SotA Walking Corpse_Human,
                SotA Walking Corpse_Mounted,
                SotA Walking Corpse_Wolf Rider,
                SotA Swimming Corpse,
                SotA Walking Corpse_Saurian,
                SotA Walking Corpse_Wose,
                SotA Walking Corpse_Goblin,
                SotA Flying Corpse_Gryphon,
                SotA Walking Corpse_Spider,
                SotA Walking Corpse_Troll,
                SotA Walking Corpse_Dwarf"
                key=type
                separator=","
            [/split]
        [/set_variables]
        # This string will be used in the zombie recruit dialog box.
        [set_variables]
            name=zombies
            mode=merge
            [split]
                list= _ "(Bat),
                (Rat),
                (Wolf),
                (Human),
                (Mounted),
                (Wolf Rider),,
                (Saurian),
                (Wose),
                (Goblin),
                (Gryphon),
                (Spider),
                (Troll),
                (Dwarf)" # po: The extra comma after (Wolf Rider) is for the swimming corpse. Since there is only one of those, it would be redundant to label it in English. You can add (Swimmer) before the second comma if it makes more sense in your language to do so. Be careful not to delete any commas!
                key=sota_variation
                separator=","
            [/split]
        [/set_variables]
        [set_variables]
            name=zombies
            mode=merge
            [split]
                list= _ "You can now raise bat corpses!,
                You can now raise rat corpses!,
                You can now raise wolf corpses!,
                You can now raise human corpses!,
                You can now raise mounted corpses!,
                You can now raise wolf rider corpses!,
                You can now raise swimming corpses!,
                You can now raise saurian corpses!,
                You can now raise wose corpses!,
                You can now raise goblin corpses!,
                You can now raise gryphon corpses!,
                You can now raise spider corpses!,
                You can now raise troll corpses!,
                You can now raise dwarf corpses!" # po: Be careful not to delete any commas!
                key=allow_recruit_message
                separator=","
            [/split]
        [/set_variables]
        [set_variables]
            name=zombies
            mode=merge
            [split]
                # The player starts out with no zombies available.
                list="no,no,no,no,no,no,no,no,no,no,no,no,no,no"
                key=allow_recruit
                separator=","
            [/split]
        [/set_variables]
    [/event]
#enddef

#define Z_CASE RACE ZOMBIE_TYPE
    [case]
        value={RACE}
        [set_variable]
            name=zombie_type
            value={ZOMBIE_TYPE}
        [/set_variable]
    [/case]
#enddef

# This macro saves the currently recruitable zombies into a string that can be used in a
# [set_variables] statement later to restore the list. (LOAD_ZOMBIE_LIST does that.)
#define SAVE_ZOMBIE_LIST VARIABLE
    [foreach]
        array=zombies
        [do]
            [if]
                [variable]
                    name=this_item.allow_recruit
                    boolean_equals=yes
                [/variable]
                [then]
                    [set_variable]
                        name={VARIABLE}
                        value=${VARIABLE}| + "yes,"
                    [/set_variable]
                [/then]
                [else]
                    [set_variable]
                        name={VARIABLE}
                        value=${VARIABLE}| + "no,"
                    [/set_variable]
                [/else]
            [/if]
        [/do]
    [/foreach]
    # Remove the trailing comma from the string.
    [set_variable]
        name={VARIABLE}
        value="$(substring( '${VARIABLE}', 0, (length('${VARIABLE}')-1) ))"
    [/set_variable]

    # This *should* work, but doesn't as of 1.14.5. It causes a lua error because of
    # concatenation of a boolean, presumably because the strings are all either
    # "yes" or "no". If that changes, this code can be uncommented, and the code
    # above removed.
#     [set_variable]
#         name=ardonna_zombies
#         [join]
#             variable=zombies
#             key=allow_recruit
#             separator=","
#         [/join]
#     [/set_variable]
#enddef

#define LOAD_ZOMBIE_LIST VARIABLE
    [set_variables]
        name=zombies
        mode=merge
        [split]
            list=${VARIABLE}
            key=allow_recruit
            separator=","
        [/split]
    [/set_variables]
#enddef

# Each enemy unit type that is killed and *not* immediately raised as a corpse results
# in that type being added to the recruit list instead. We need a copy of the event for
# each enemy type that the player could run into. The bat version also works on the
# player's own bats. After there is more than one zombie on the list, zombies are no
# longer added to the recruit list directly, but to the zombie recruit dialog.
#define NEW_UNIT_TYPE_KILLED FILTER ZOMBIE_TYPE PROFILE_IMAGE
    [event]
    # Only humans are ever added with the custom event name, but we include it for
    # that case.
        name=die, add_{ZOMBIE_TYPE}
        [filter]
            {FILTER}
        [/filter]
        # The unit won't immediately be raised if the attacking weapon was not a plague
        # weapon, or if the unit was in a village. (In which case, the weapon doesn't
        # matter.)
        [filter_condition]
            [variable]
                name=second_weapon.specials.plague.id
                # This matches a SotA zombie's touch or a SotA necromancer's staff.
                not_equals=SotA_plague
            [/variable]
            [or]
                [have_location]
                    x,y=$unit.x, $unit.y
                    terrain=*^V*
                [/have_location]
            [/or]
        [/filter_condition]
        # This is necessary to do math with this variable later.
        [set_variable]
            name=num_zombie_types
            value=0
        [/set_variable]
        # Find the current type in the zombie array.
        [foreach]
            array=zombies
            [do]
                [if]
                    [variable]
                        name=this_item.allow_recruit
                        boolean_equals=yes
                    [/variable]
                    [then]
                         [set_variable]
                             # This won't include the current one being added.
                            name=num_zombie_types
                            add=1
                        [/set_variable]
                   [/then]
                [/if]
                [if]
                    [variable]
                        name=this_item.type
                        equals={ZOMBIE_TYPE}
                    [/variable]
                    [variable]
                        name=this_item.allow_recruit
                        boolean_equals=no
                    [/variable]
                    [then]
                        [set_variable]
                            name=this_item.allow_recruit
                            value=yes
                        [/set_variable]
                        [message]
                            speaker=narrator
                            image={PROFILE_IMAGE}~SCALE(93,93)
                            message=$this_item.allow_recruit_message
                        [/message]
                    [/then]
                [/if]
            [/do]
        [/foreach]
        [if]
            [variable]
                name=num_zombie_types
                # If the number of previously available zombies is less than or equal to
                # this value, zombies are added to the recruit list.
                less_than_equal_to=1
            [/variable]
            [then]
                [allow_recruit]
                    type={ZOMBIE_TYPE}
                    side=1
                [/allow_recruit]
            [/then]
            [elseif]
                [variable]
                    name=num_zombie_types
                    # If the number of previously available zombies reaches this value,
                    # zombies are no longer directly added to the recruit list. They are
                    # added to the special recruit dialog instead.
                    equals=2
                [/variable]
                [then]
                    [foreach]
                        array=zombies
                        [do]
                            [disallow_recruit]
                                type=$this_item.type
                                side=1
                            [/disallow_recruit]
                        [/do]
                    [/foreach]
                    [allow_recruit]
                        type=SotA Walking Corpse_Dummy
                        side=1
                    [/allow_recruit]
                [/then]
            [/elseif]
        [/if]
        [clear_variable]
            name=num_zombie_types
        [/clear_variable]
    [/event]
#enddef

# This macro defines all the events that will be need to be included in each scenario.
#define ZOMBIES
    [event]
        name=prerecruit
        first_time_only=no
        [filter]
            type = SotA Walking Corpse_Dummy
        [/filter]
        # This lua function creates a dialog box for choosing a walking corpse type.
        # It sets two WML variables: recruitedZombieType and recruitedZombieCost.
        # If nothing was recruited after all, recruitedZombieType is set to "cancel".
        [lua]
            code = "wesnoth.dofile 'campaigns/Secrets_of_the_Ancients/utils/zombie_recruit_dialog.lua'"
        [/lua]
        [if]
            [variable]
                name = recruitedZombieType
                equals = "cancel"
            [/variable]
            [then]
                [kill]
                    id=$unit.id
                [/kill]
            [/then]
            [else]
                [transform_unit]
                    id=$unit.id
                    transform_to=$recruitedZombieType
                [/transform_unit]
                # At the moment, the new unit has the original single hitpoint, so:
                [heal_unit]
                    [filter]
                        id=$unit.id
                    [/filter]
                    amount=full
                [/heal_unit]
                # The player has already paid one gold (the minimum), but we still need
                # to take away the rest.
                [gold]
                    side=1
                    amount = "$(($recruitedZombieCost-1) * -1)"
                [/gold]
            [/else]
        [/if]
        [clear_variable]
            name=recruitedZombieType, recruitedZombieCost
        [/clear_variable]
    [/event]

    # This event shouldn't ever be fired, but a lua error in the recruit dialog would
    # allow the dummy unit to actually be recruited. This event prevents that.
    [event]
        name=recruit
        first_time_only=no
        [filter]
            type=SotA Walking Corpse_Dummy
        [/filter]
        [kill]
            id=$unit.id
        [/kill]
        [gold]
            side=1
            amount=1
        [/gold]
        [message]
            speaker=narrator
            message= _ "A lua error has occurred, and a corpse cannot be recruited."
        [/message]
    [/event]

    # This event recreates the plague special for SotA corpses.
    [event]
        name=die
        first_time_only=no

        [filter_condition]
            [variable]
                name=second_weapon.specials.plague.id
                # This matches a SotA zombie's touch or a SotA necromancer's staff.
                equals=SotA_plague
            [/variable]
        [/filter_condition]
        [filter]
            [not]
                race=undead
            [/not]
            [filter_location]
                [not]
                    terrain=*^V*
                [/not]
            [/filter_location]
        [/filter]

        # This will be the default (for elves, orcs, and humans).
        [set_variable]
            name=zombie_type
            value=SotA Walking Corpse_Human
        [/set_variable]
        # This switch statement chooses the type of zombie that will be created.
        [switch]
            variable=unit.race
            [case]
                value=monster
                [if]
                    [variable]
                        name=unit.type
                        equals=Giant Rat
                    [/variable]
                    [then]
                        [set_variable]
                            name=zombie_type
                            value=SotA Walking Corpse_Rat
                        [/set_variable]
                    [/then]
                    [else]
                        # Apparently, it's a spider.
                        [set_variable]
                            name=zombie_type
                            value=SotA Walking Corpse_Rat
                        [/set_variable]
                    [/else]
                [/if]
            [/case]
            [case]
                value=human
                [if]
                    [variable]
                        name=unit.undead_variation
                        equals=mounted
                    [/variable]
                    [then]
                        [set_variable]
                            name=zombie_type
                            value=SotA Walking Corpse_Mounted
                        [/set_variable]
                    [/then]
                [/if]
            [/case]
            [case]
                value=wolf
                [if]
                    [variable]
                        name=unit.type
                        equals=Wolf
                    [/variable]
                    [or]
                        [variable]
                            name=unit.type
                            equals=Great Wolf
                        [/variable]
                    [/or]
                    [then]
                        [set_variable]
                            name=zombie_type
                            value=SotA Walking Corpse_Wolf
                        [/set_variable]
                    [/then]
                    [else]
                        [set_variable]
                            name=zombie_type
                            value=SotA Walking Corpse_Wolf Rider
                        [/set_variable]
                    [/else]
                [/if]
            [/case]
            {Z_CASE bats "SotA Flying Corpse_Bat"}
            {Z_CASE (merman, naga) "SotA Swimming Corpse"}
            {Z_CASE  lizard "SotA Walking Corpse_Saurian"}
            {Z_CASE  wose "SotA Walking Corpse_Wose"}
            {Z_CASE goblin "SotA Walking Corpse_Goblin"}
            {Z_CASE  gryphon "SotA Flying Corpse_Gryphon"}
            {Z_CASE  troll "SotA Walking Corpse_Troll"}
            {Z_CASE  dwarf "SotA Walking Corpse_Dwarf"}
        [/switch]
        [kill]
            id=$unit.id
        [/kill]
        [unit]
            type=$zombie_type
            side=1
            x, y=$unit.x, $unit.y
            moves=0
            attacks_left=0
            animate=yes
        [/unit]
        [clear_variable]
            name=zombie_type
        [/clear_variable]
    [/event]

    {NEW_UNIT_TYPE_KILLED (race=bats) ("SotA Flying Corpse_Bat") "portraits/undead/zombie-bat.png"}
    {NEW_UNIT_TYPE_KILLED (type=Giant Rat) ("SotA Walking Corpse_Rat") "units/undead/zombie-rat.png"}
    {NEW_UNIT_TYPE_KILLED (type_adv_tree=Wolf) ("SotA Walking Corpse_Wolf") "portraits/undead/zombie-wolf.png"}
    {NEW_UNIT_TYPE_KILLED (race=human) ("SotA Walking Corpse_Human") "portraits/undead/walking-corpse.png"}
    {NEW_UNIT_TYPE_KILLED (type_adv_tree=Horseman, Cavalryman) ("SotA Walking Corpse_Mounted") "portraits/undead/walking-corpse.png"}
    {NEW_UNIT_TYPE_KILLED (type_adv_tree=Wolf Rider) ("SotA Walking Corpse_Wolf Rider") "portraits/undead/zombie-goblin.png"}
    {NEW_UNIT_TYPE_KILLED (race=merman,naga) ("SotA Swimming Corpse") "portraits/undead/zombie-swimmer.png"}
    {NEW_UNIT_TYPE_KILLED (race=lizard) ("SotA Walking Corpse_Saurian") "portraits/undead/zombie-saurian.png"}
    {NEW_UNIT_TYPE_KILLED (race=wose) ("SotA Walking Corpse_Wose") "portraits/undead/zombie-wose.png"}
    {NEW_UNIT_TYPE_KILLED (race=goblin) ("SotA Walking Corpse_Goblin") "portraits/undead/zombie-goblin.png"}
    {NEW_UNIT_TYPE_KILLED (race=gryphon) ("SotA Flying Corpse_Gryphon") "portraits/undead/zombie-gryphon.png"}
    {NEW_UNIT_TYPE_KILLED (type=Giant Spider) ("SotA Walking Corpse_Spider") "units/undead/zombie-spider.png"}
    {NEW_UNIT_TYPE_KILLED (race=troll) ("SotA Walking Corpse_Troll") "portraits/undead/zombie-troll.png"}
    {NEW_UNIT_TYPE_KILLED (race=dwarf) ("SotA Walking Corpse_Dwarf") "portraits/undead/zombie-dwarf.png"}

    # This event is in this ZOMBIE macro because these lua globals are only used in the
    # zombie recruit dialog.
    [event]
        name=preload
        first_time_only=no
        [lua] 
            code = <<
                H = wesnoth.require "helper"
                T = H.set_wml_tag_metatable {}
                V = H.set_wml_var_metatable {}
                W = H.set_wml_action_metatable {}
                _ = wesnoth.textdomain "wesnoth-sota"
            >>
        [/lua]
    [/event]
#enddef
