#textdomain wesnoth-thot

#define RECALL_VETERAN THRESHOLD BACKUP_TYPE X Y
    # if we have many veterans, recall one of them.
    # if our recall list is small, spawn a new unit instead
    # this helps players "catch up" if they lost a lot of veterans
    [if]
        [have_unit]
            side=1
            search_recall_list=yes
            x,y=recall,recall
            level=2-99
            count={THRESHOLD}
            race=dwarf # not Gryphons or Ratheln
        [/have_unit]
        [then]
            {GENERIC_UNIT 1 {BACKUP_TYPE} {X} {Y}} {ANIMATE}
        [/then]
        [else]
            [recall]
                side=1
                level=3-99
                race=dwarf
                x,y={X},{Y}
            [/recall]
            [if]
                [have_unit]
                    x,y={X},{Y}
                    count=0
                [/have_unit]
                [then]
                    [recall]
                        side=1
                        level=2
                        race=dwarf
                        x,y={X},{Y}
                    [/recall]
                [/then]
            [/if]
        [/else]
    [/if]
#enddef

# "C" stands for "conditional"
#define GENERIC_UNITC SIDE TYPE X Y WML
    {VARIABLE generic_unitc {TYPE}}
    [if] {VARIABLE_CONDITIONAL generic_unitc not_equals "none"}
        [then]
            {GENERIC_UNIT {SIDE} {TYPE} {X} {Y}} {WML}
        [/then]
    [/if]
    {CLEAR_VARIABLE generic_unitc}
#enddef
#define NAMED_UNITC SIDE TYPE X Y ID NAME WML
    {VARIABLE named_unitc {TYPE}}
    [if] {VARIABLE_CONDITIONAL named_unitc not_equals "none"}
        [then]
            {NAMED_UNIT {SIDE} {TYPE} {X} {Y} {ID} {NAME} ()} {WML}
        [/then]
    [/if]
    {CLEAR_VARIABLE named_unitc}
#enddef

#define SOUND FILE
    #
    [sound]
        name={FILE}
    [/sound]
#enddef

#define DELAY TIME
    [delay]
        time={TIME}
    [/delay]
#enddef

#define ANIMATE
    [+unit]
        animate=yes
    [/unit]
#enddef

#define MOVES MAX_MOVES
    [+unit]
        max_moves={MAX_MOVES}
    [/unit]
#enddef

#define PASSABLE
    [+unit]
        passable=yes
    [/unit]
#enddef

#define HITPOINTS HP
    [+unit]
        hitpoints={HP}
    [/unit]
#enddef

#define EXPERIENCE XP
    [+unit]
        experience={XP}
    [/unit]
#enddef

#define STATUS WML
    [+unit]
        [status]
            {WML}
        [/status]
    [/unit]
#enddef

#define GENDER GND
    [+unit]
        gender={GND}
    [/unit]
#enddef

#define NAME UNITNAME
    [+unit]
        name={UNITNAME}
    [/unit]
#enddef

#define ROLE ROLENAME
    [+unit]
        role={ROLENAME}
    [/unit]
#enddef

#define MODIFICATIONS WML
    #
    [modifications]
        {WML}
    [/modifications]
#enddef

#define ADD_MODIFICATION WML
    [+unit]
        [modifications]
            {WML}
        [/modifications]
    [/unit]
#enddef

#define KILL FILTER
#arg ANIMATE
no#endarg
#arg FIRE_EVENT
no#endarg
    [kill]
        {FILTER}
        animate={ANIMATE}
        fire_event={FIRE_EVENT}
    [/kill]
#enddef

#define KILL_COUNT COUNT FLT
#arg ANIMATE
no#endarg
#arg FIRE_EVENT
no#endarg
    [store_unit]
        {FILTER {FLT}}
        kill,variable=no,KILL_COUNT_stored_units
    [/store_unit]
    {VARIABLE KILL_COUNT_i 0}
    [foreach]
        array,variable=KILL_COUNT_stored_units,KILL_COUNT_unit
        [do]
            [if] {VARIABLE_CONDITIONAL i less_than {COUNT}}
                [then]
                    {VARIABLE_OP i add 1}
                    [kill]
                        id=$KILL_COUNT_unit.id
                        animate={ANIMATE}
                        fire_event={FIRE_EVENT}
                    [/kill]
                [/then]
            [/if]
        [/do]
    [/foreach]
    {CLEAR_VARIABLE KILL_COUNT_stored_units,KILL_COUNT_i}
#enddef

#define REDRAW
    [redraw]
        clear_shroud=yes
    [/redraw]
#enddef

#define REVEAL LOCS
#arg MULTITURN
no#endarg
    [remove_shroud]
        side=1
        {LOCS}
    [/remove_shroud]
    [lift_fog]
        [filter_side]
            side=1
        [/filter_side]
        {LOCS}
        multiturn={MULTITURN}
    [/lift_fog]
#enddef

#enemy macro that retreats all enemies to one spot, intended for cutscenes mainly
#WARNING: this uses [kill]. if you need retreat that keeps units alive (like with store_unit), use something other than this code
#define CUTSCENE_ENEMIES_RETREAT SIDE X Y
    [store_unit]
        [filter]
            side={SIDE}
            formula=(self.hitpoints>0)
        [/filter]
        variable=cutscene_retreating_enemies
    [/store_unit]

    [foreach]
        array=cutscene_retreating_enemies
        index_var=i
        [do]
            {MOVE_UNIT id=$this_item.id {X} {Y}}
            [kill]
                id=$this_item.id
                animate=no
                fire_event=no
            [/kill]
        [/do]
    [/foreach]

    {CLEAR_VARIABLE cutscene_retreating_enemies}
#enddef

# primitive macros for fading music
#define FADE_MUSIC_IN DURATION
    #
    {VARIABLE fade_duration_remaining {DURATION}}
    [while] {VARIABLE_CONDITIONAL fade_duration_remaining greater_than 0}
        [do]
            {VARIABLE_OP fade_duration_remaining sub 5}
            {VARIABLE volume 100}
            {VARIABLE_OP volume multiply $fade_duration_remaining}
            {VARIABLE_OP volume divide {DURATION}}
            {VARIABLE volume "$(100-$volume)"}
            [volume]
                music=$volume
            [/volume]
            {DELAY 5}
        [/do]
    [/while]
    {CLEAR_VARIABLE fade_duration_remaining,volume}
    [volume]
        music=100 # just in case
    [/volume]
    #
#enddef
#define FADE_MUSIC_OUT DURATION
    #
    {VARIABLE fade_duration_remaining {DURATION}}
    [while] {VARIABLE_CONDITIONAL fade_duration_remaining greater_than 0}
        [do]
            {VARIABLE_OP fade_duration_remaining sub 5}
            {VARIABLE volume 100}
            {VARIABLE_OP volume multiply $fade_duration_remaining}
            {VARIABLE_OP volume divide {DURATION}}
            [volume]
                music=$volume
            [/volume]
            {DELAY 5}
        [/do]
    [/while]
    {CLEAR_VARIABLE fade_duration_remaining,volume}
    [volume]
        music=0 # just in case
    [/volume]
    #
#enddef
