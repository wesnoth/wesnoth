#textdomain wesnoth-h2tt

# some examples:
# {MODIFY_AI_DELETE_ASPECT 2,3,4 avoid "*"}
# {MODIFY_SIDE_AI (2,3,4) (grouping=defensive)}
# {MODIFY_SIDE_AI (2,3,4) ({GOAL_SEEK_SIDE 99 1 4})}
# {MODIFY_SIDE_AI (2,3,4) ({GOAL_AVOID_SIDE 99 1 4})}
# {MODIFY_SIDE_AI (2,3,4) ({GOAL_LOCATION 99 (x,y=26,14)})}
# {MODIFY_SIDE_AI (2,3,4) ({GOAL_TERRAIN 15 (terrain=Kh,Ch,Chr,R*)})}
# {MODIFY_SIDE_AI (2,3,4) ({GOAL_LOCATION 99 (
#     x=0,1,2
#     y=0,1,2
# )})}
# {MODIFY_SIDE_AI (2) ([avoid]
#     x=13-32,20-32
#     y=1-6,1-19
# [/avoid])}

#define IF_TIME_OF_DAY TIME_ID
    [store_time_of_day]
    [/store_time_of_day]
    [if]
        [variable]
            name=time_of_day.id
            equals={TIME_ID}
        [/variable]
#enddef

#--------------------
# GOALS AND AVOIDS
#--------------------
# don't abandon our leader, even when we'd normally be avoiding an enemy (since leaders don't run away)
#define GOAL_AVOID_SIDE_UNLESS_DEFENDING_LEADER VALUE MY_SIDE AVOID_SIDE AVOID_RADIUS
    {GOAL_LOCATION {VALUE} (
        [not]
            [filter]
                side={AVOID_SIDE}
            [/filter]
            radius={AVOID_RADIUS}
            [not]
                [filter]
                    side={MY_SIDE}
                    canrecruit=yes
                [/filter]
                radius=1
            [/not]
        [/not]
    )}
#enddef

#define GOAL_AVOID_SIDE VALUE SIDE RADIUS
    {GOAL_LOCATION {VALUE} (
        [not]
            [filter]
                side={SIDE}
            [/filter]
            radius={RADIUS}
        [/not]
    )}
#enddef

#define GOAL_SEEK_SIDE VALUE SIDE RADIUS
    {GOAL_LOCATION {VALUE} (
        [filter]
            side={SIDE}
        [/filter]
        radius={RADIUS}
    )}
#enddef

#define GOAL_UNIT VALUE CRITERIA
    [goal]
        name=target_unit
        [criteria]
            {CRITERIA}
        [/criteria]
        value={VALUE}
    [/goal]
#enddef

#define GOAL_LOCATION_ID VALUE ID CRITERIA
    [goal]
        id={ID}
        name=target_location
        [criteria]
            {CRITERIA}
        [/criteria]
        value={VALUE}
    [/goal]
#enddef

#define GOAL_TERRAIN VALUE CRITERIA
    [goal]
        name=target_location
        [filter_location]
            {CRITERIA}
        [/filter_location]
        value={VALUE}
    [/goal]
#enddef

#define GOAL_LOCATION VALUE CRITERIA
    [goal]
        name=target_location
        [criteria]
            {CRITERIA}
        [/criteria]
        value={VALUE}
    [/goal]
#enddef

#define AVOID_SIDE SIDE RADIUS
    [avoid]
        [filter]
            side={SIDE}
        [/filter]
        radius={RADIUS}
    [/avoid]
#enddef

#--------------------
# MODIFY AI
#--------------------
#define MODIFY_SIDE_AI SIDE MODIFICATION
    [modify_side]
        side={SIDE}
        [ai]
            {MODIFICATION}
        [/ai]
    [/modify_side]
#enddef

#define DISABLE_ATTACKING SIDE
    {MODIFY_AI_DELETE_CANDIDATE_ACTION {SIDE} main_loop spread_poison}
    {MODIFY_AI_DELETE_CANDIDATE_ACTION {SIDE} main_loop high_xp_attack}
    {MODIFY_AI_DELETE_CANDIDATE_ACTION {SIDE} main_loop combat}
#enddef

#define ENABLE_ATTACKING SIDE
    {MODIFY_AI_ADD_CANDIDATE_ACTION {SIDE} main_loop {AI_CA_SPREAD_POISON}}
    {MODIFY_AI_ADD_CANDIDATE_ACTION {SIDE} main_loop {AI_CA_HIGH_XP_ATTACK}}
    {MODIFY_AI_ADD_CANDIDATE_ACTION {SIDE} main_loop {AI_CA_COMBAT}}
#enddef

#--------------------
# OFFENSE/DEFENSE BEHAVIOR
#--------------------
#define RESET_SIDE_AI SIDE GROUPING AGGRESSION CAUTION
    {DISABLE_ATTACKING {SIDE}} # reset any attack-related CA score changes
    {ENABLE_ATTACKING {SIDE}}
    {MODIFY_AI_DELETE_CANDIDATE_ACTION {SIDE} main_loop leader_shares_keep} # don't share keep by default, since it looks odd

    {MODIFY_AI_DELETE_GOAL {SIDE} "*"}
    {MODIFY_SIDE_AI ({SIDE}) ([avoid]
    x,y=0,0
[/avoid])}

{MODIFY_AI_DELETE_ASPECT {SIDE} grouping "*"}
{MODIFY_AI_DELETE_ASPECT {SIDE} aggression "*"}
{MODIFY_AI_DELETE_ASPECT {SIDE} caution "*"}
{MODIFY_AI_DELETE_ASPECT {SIDE} leader_value "*"}

{MODIFY_SIDE_AI ({SIDE}) (grouping={GROUPING})}
{MODIFY_SIDE_AI ({SIDE}) (aggression={AGGRESSION})}
{MODIFY_SIDE_AI ({SIDE}) (caution={CAUTION})}
{MODIFY_SIDE_AI ({SIDE}) (leader_value=0)}
{MODIFY_SIDE_AI ({SIDE}) (recruitment_diversity=99999)} # high diversity is good; means we operate better
{MODIFY_SIDE_AI ({SIDE}) (recruitment_randomness=0)}
#enddef

#define VARY_AI_BY_SCHEDULE SIDE
    {VARY_AI_BY_SCHEDULE_ENEMY {SIDE} 1}
#enddef

#define VARY_AI_BY_SCHEDULE_ENEMY SIDE ENEMY
    {VARY_AI_BY_SCHEDULE_ENEMY_TIME_OF_DAY {SIDE} {ENEMY} morning midday afternoon}
#enddef

#define VARY_AI_BY_SCHEDULE_NIGHTTIME SIDE
    {VARY_AI_BY_SCHEDULE_ENEMY_TIME_OF_DAY {SIDE} 1 first_watch midnight second_watch}
#enddef

#define VARY_AI_BY_SCHEDULE_ENEMY_NIGHTTIME SIDE ENEMY
    {VARY_AI_BY_SCHEDULE_ENEMY_TIME_OF_DAY {SIDE} {ENEMY} first_watch midnight second_watch}
#enddef

#define AND_NO_ENEMIES_NEAR_MY_LEADER SIDE
    [not]
        [have_unit]
            side={SIDE}
            canrecruit=yes
            [filter_adjacent]
                is_enemy=yes
            [/filter_adjacent]
        [/have_unit]
    [/not]
#enddef

#define VARY_AI_BY_SCHEDULE_ENEMY_TIME_OF_DAY SIDE ENEMY TIME1 TIME2 TIME3
    {IF_TIME_OF_DAY {TIME1}}
    {AND_NO_ENEMIES_NEAR_MY_LEADER {SIDE}}
    [then]
        {MODIFY_SIDE_AI ({SIDE}) ({GOAL_AVOID_SIDE_UNLESS_DEFENDING_LEADER 9 {SIDE} {ENEMY} 3})} # avoid staying too close
        {MODIFY_SIDE_AI ({SIDE}) ({GOAL_SEEK_SIDE                          8        {ENEMY} 9})} # but seek staying close enough

        {MODIFY_SIDE_AI ({SIDE}) (aggression=-9)}
        {MODIFY_SIDE_AI ({SIDE}) (caution=9)}
        {MODIFY_SIDE_AI ({SIDE}) (grouping=defensive)}
    [/then]
    {ENDIF}
    {IF_TIME_OF_DAY {TIME2}}
    {AND_NO_ENEMIES_NEAR_MY_LEADER {SIDE}}
    [then]
        {MODIFY_SIDE_AI ({SIDE}) ({GOAL_AVOID_SIDE_UNLESS_DEFENDING_LEADER 9 {SIDE} {ENEMY} 3})} # avoid staying too close
        {MODIFY_SIDE_AI ({SIDE}) ({GOAL_SEEK_SIDE                          8        {ENEMY} 9})} # but seek staying close enough

        {MODIFY_SIDE_AI ({SIDE}) (aggression=-9)}
        {MODIFY_SIDE_AI ({SIDE}) (caution=9)}
        {MODIFY_SIDE_AI ({SIDE}) (grouping=defensive)}
    [/then]
    {ENDIF}
    {IF_TIME_OF_DAY {TIME3}}
    {AND_NO_ENEMIES_NEAR_MY_LEADER {SIDE}}
    [then]
        {MODIFY_SIDE_AI ({SIDE}) ({GOAL_AVOID_SIDE_UNLESS_DEFENDING_LEADER 9 {SIDE} {ENEMY} 1})} # avoid staying too close
        {MODIFY_SIDE_AI ({SIDE}) ({GOAL_SEEK_SIDE                          8        {ENEMY} 7})} # but seek staying close enough

        {MODIFY_SIDE_AI ({SIDE}) (aggression=-9)}
        {MODIFY_SIDE_AI ({SIDE}) (caution=9)}
        {MODIFY_SIDE_AI ({SIDE}) (grouping=defensive)}
    [/then]
    {ENDIF}
#enddef

#define RETREAT_WHEN_WEAK SIDE COUNT GOALS
#arg SUF
#endarg
    [if]
        [have_unit]
            side={SIDE}
            count={COUNT}
            canrecruit=no
            {SUF}
        [/have_unit]
        {AND_NO_ENEMIES_NEAR_MY_LEADER {SIDE}}
        [lua]
            code=<< return wml.variables.turn_number>1 >> # don't open up with retreating; allow at least 1 round of recruitment
        [/lua]
        [then]
            {MODIFY_SIDE_AI ({SIDE}) (grouping=defensive)}
            {MODIFY_SIDE_AI ({SIDE}) (aggression=-2)}
            {MODIFY_SIDE_AI ({SIDE}) (caution=2)}
            {MODIFY_SIDE_AI ({SIDE}) ({GOALS})}
        [/then]
    [/if]
#enddef

#--------------------
# SPECIFIC BEHAVIORS
#--------------------
# meant for similiar behavior to status=guardian, but with more customizability
#define ZONE_GUARDIAN X Y ENEMY_LOCATION
    [+unit]
        [ai]
            [micro_ai]
                ai_type=zone_guardian
                station_x,station_y={X},{Y}
                [filter_location]
                    {ENEMY_LOCATION}
                [/filter_location]
            [/micro_ai]
        [/ai]
    [/unit]
#enddef
#define VIP_GUARDIAN VIP_FILTER INNER_RADIUS OUTER_RADIUS
    [+unit]
        [ai]
            [micro_ai]
                ai_type=zone_guardian
                [filter_location]
                    radius={INNER_RADIUS}
                    [filter]
                        {VIP_FILTER}
                    [/filter]
                [/filter_location]
                [filter_location_enemy]
                    radius={OUTER_RADIUS}
                    [filter]
                        {VIP_FILTER}
                    [/filter]
                [/filter_location_enemy]
            [/micro_ai]
        [/ai]
    [/unit]
#enddef

# don't allow AI leaders to be baited far from their keeps
# modify per-turn instead of max-moves so that the player can't see it
#define SILENTLY_LIMIT_LEADER_MOVES SIDE MOVES
    [event]
        name=side {SIDE} turn refresh
        first_time_only=no
        id=limit_moves_leader{SIDE}
        # only limit moves if we're already standing on a keep - otherwise we might get stuck somewhere far away
        [filter_condition]
            [have_unit]
                side={SIDE}
                canrecruit=yes
                [filter_location]
                    terrain=K*^*,*^K*
                [/filter_location]
            [/have_unit]
        [/filter_condition]
        {MODIFY_UNIT side,canrecruit={SIDE},yes moves {MOVES}}
    [/event]
#enddef

#define SILENTLY_LIMIT_MOVES SIDE FLT MOVES
    [event]
        name=side {SIDE} turn refresh
        first_time_only=no
        [modify_unit]
            [filter]
                side={SIDE}
                {FLT}
            [/filter]
            moves={MOVES}
        [/modify_unit]
    [/event]
#enddef

#define LIMIT_RECRUITS_PER_TURN SIDES AMOUNT
    [event]
        name=side turn
        first_time_only=no
        [filter_condition]
            [have_unit]
                side=$side_number

                [and]
                    side={SIDES}
                [/and]
            [/have_unit]
        [/filter_condition]

        {VARIABLE recruits_this_turn 0}

        [event]
            name=turn end

            {CLEAR_VARIABLE recruits_this_turn}
        [/event]
    [/event]

    [event]
        name=recruit
        first_time_only=no
        [filter]
            side={SIDES}
        [/filter]

        {VARIABLE_OP recruits_this_turn add 1}

        [if]
            {VARIABLE_CONDITIONAL recruits_this_turn equals {AMOUNT}}
            [then]
                [store_side]
                    side=$side_number
                [/store_side]

                [disallow_recruit]
                    side=$side_number
                [/disallow_recruit]
                [event]
                    name=turn end

                    [allow_recruit]
                        side=$side.side
                        type=$side.recruit
                    [/allow_recruit]

                    {CLEAR_VARIABLE side}
                [/event]
            [/then]
        [/if]
    [/event]
#enddef

#define GET_ARMY_VALUE VARNAME FLT
    [store_unit]
        [filter]
            {FLT}
            [not]
                x,y=recall,recall
            [/not]
        [/filter]
        variable=getArmyValue_stored_units
    [/store_unit]
    {VARIABLE {VARNAME} 0}
    [foreach]
        array=getArmyValue_stored_units
        [do]
            [unit_worth]
                id=$this_item.id
            [/unit_worth]
            {VARIABLE_OP {VARNAME} add "$( $cost * $health/100 )"} # scale heavily by health, because this is used for farming detection, and someone who's farming will have mostly full-hp units
            {CLEAR_VARIABLE cost,next_cost,health,experience,unit_worth}
        [/do]
    [/foreach]
    {CLEAR_VARIABLE getArmyValue_stored_units}
#enddef

#define ENRAGE_SIDE_LEADER SIDE GOLD_THRESHOLD NEW_GOLD
    [gold]
        side,amount={SIDE},{NEW_GOLD}
    [/gold]
    # because this is an event, we always wait at least 1 turn before storming off the keep
    [event]
        name=side {SIDE} turn # before income, in case we have so much income we never go over gold_threshold
        first_time_only=no
        id=enrage{SIDE}

        [store_gold]
            side={SIDE}
        [/store_gold]
        [if] {VARIABLE_CONDITIONAL gold less_than_equal_to {GOLD_THRESHOLD}}
            [then]
                # leader rushes in and attacks. Use zone_guardian to force even suicidal attacks
                [micro_ai]
                    ai_type,action,side=zone_guardian,add,{SIDE}
                    [filter]
                        side={SIDE}
                        canrecruit=yes
                    [/filter]
                    [filter_location]
                    [/filter_location]
                    ca_score=300000 # higher than every other CA, including the normal leader CAs
                [/micro_ai]

                # nearby allies more-or-less follow around the leader
                [micro_ai]
                    ai_type,action,side=zone_guardian,add,{SIDE}
                    [filter]
                        side={SIDE}
                        canrecruit=no
                        [filter_location]
                            radius=8
                            [filter]
                                side={SIDE}
                                canrecruit=yes
                            [/filter]
                        [/filter_location]
                    [/filter]

                    [filter_location]
                        radius=3
                        [filter]
                            side={SIDE}
                            canrecruit=yes
                        [/filter]
                    [/filter_location]

                    [filter_location_enemy]
                        radius=8
                        [filter]
                            side={SIDE}
                            canrecruit=yes
                        [/filter]
                    [/filter_location_enemy]
                [/micro_ai]
                [remove_event]
                    id=limit_moves_leader{SIDE},enrage{SIDE}
                [/remove_event]
            [/then]
        [/if]
        {VARIABLE side_{SIDE}_enraged yes}
        [event]
            name=victory
            {CLEAR_VARIABLE side_{SIDE}_enraged}
        [/event]
    [/event]
#enddef

# anti-farming feature: if we're very behind in army and have been for several turns,
# recruit a burst of units and send our leader out to fight personally
# NOTE - this macro hasn't been tested with multiple sides or multiple leaders
# NOTE - this macro only works for side 2+ AIs fighting against side 1
#define AUTOENRAGE SIDE GOLD
    [if] {VARIABLE_CONDITIONAL already_autoenraged{SIDE} not_equals yes}
        [then]
            [if]
                {VARIABLE_CONDITIONAL turn_number equals 1}
                [then]
                    {VARIABLE autoenrage{SIDE}_timer 0}
                [/then]
            [/if]

            # does the player greatly outnumber us this turn? How many turns has this been going on for?
            {GET_ARMY_VALUE autoenrage_player_army side=1} # only care about the player's strength, not any allies (who may or may not actually be useful)
            {GET_ARMY_VALUE autoenrage_ai_army (
                canrecruit=no
                [filter_side]
                    [enemy_of]
                        side=1
                    [/enemy_of]
                [/filter_side]
            )}

            # if we're outnumbered and there's several player units nearby, increment our autoenrage timer
            [if]
                {VARIABLE_CONDITIONAL autoenrage_player_army greater_than "$( 3*$autoenrage_ai_army )"}
                [have_unit]
                    side={SIDE}
                    canrecruit=yes
                    count=2-99
                    [filter_location]
                        radius=9
                        [filter]
                            side=1
                        [/filter]
                    [/filter_location]
                [/have_unit]
                [then]
                    {VARIABLE_OP autoenrage{SIDE}_timer add 1}
                [/then]
                [else]
                    {VARIABLE    autoenrage{SIDE}_timer     0}
                [/else]
            [/if]
            {CLEAR_VARIABLE autoenrage_player_army,autoenrage_ai_army}

            # if things have been bad for the past 3 turns and are still bad this turn, enrage
            [if] {VARIABLE_CONDITIONAL autoenrage{SIDE}_timer greater_than_equal_to 4}
                [then]
                    {ENRAGE_SIDE_LEADER {SIDE} 35 {GOLD}}
                    {VARIABLE already_autoenraged{SIDE} yes}
                [/then]
            [/if]
        [/then]
    [/if]

    # reset the timer if any player unit dies
    [remove_event]
        id=autoenrage{SIDE}_killenemy
    [/remove_event]
    [event]
        name=die
        [filter]
            side=1
        [/filter]
        {VARIABLE autoenrage{SIDE}_timer 0}
    [/event]

    # clean up after ourselves
    [remove_event]
        id=autoenrage{SIDE}_cleanup
    [/remove_event]
    [event]
        name=victory
        id=autoenrage{SIDE}_cleanup
        {CLEAR_VARIABLE autoenrage{SIDE}_timer,already_autoenraged{SIDE}}
    [/event]
#enddef
