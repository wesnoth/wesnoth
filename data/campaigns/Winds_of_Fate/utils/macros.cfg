#textdomain wesnoth-wof

#define RECALL_COSTS
    [event]
        name = start
        [store_unit]
            [filter]
                x,y = recall,recall
            [/filter]
            variable = recalls_to_correct
        [/store_unit]
        [foreach]
            array = recalls_to_correct
            [do]
                [modify_unit]
                    [filter]
                        find_in = this_item
                    [/filter]
                    recall_cost = $this_item.cost
                [/modify_unit]
            [/do]
        [/foreach]
        {CLEAR_VARIABLE recalls_to_correct}
    [/event]
#enddef

#define INTENDANT_PROTOCOL
    # If a figher or clasher intendant is missing, make the recalled unit the new intendant if it is at least a level 2.
    [event]
        name=recall
        first_time_only=no
        [filter]
            type_adv_tree=Drake Warrior
        [/filter]
        [filter_condition]
            [not]
                [have_unit]
                    role=fighter_intendant
                    search_recall_list=yes
                [/have_unit]
            [/not]
        [/filter_condition]
        [modify_unit]
            [filter]
                id=$unit.id
            [/filter]
            role=fighter_intendant
            {TRAIT_LOYAL}
        [/modify_unit]
        [floating_text]
            [filter]
                role=fighter_intendant
            [/filter]
            text= _ "<span color='gold'>fighter intendant</span>"
        [/floating_text]
    [/event]
    [event]
        name=recall
        first_time_only=no
        [filter]
            type_adv_tree=Drake Arbiter, Drake Thrasher
        [/filter]
        [filter_condition]
            [not]
                [have_unit]
                    role=clasher_intendant
                    search_recall_list=yes
                [/have_unit]
            [/not]
        [/filter_condition]
        [modify_unit]
            [filter]
                id=$unit.id
            [/filter]
            role=clasher_intendant
            {TRAIT_LOYAL}
        [/modify_unit]
        [floating_text]
            [filter]
                role=clasher_intendant
            [/filter]
            text= _ "<span color='gold'>clasher intendant</span>"
        [/floating_text]
    [/event]
    # Automatically recall any intendants which survived the last scenario.
    [event]
        name=start
        [recall]
            role=fighter_intendant
        [/recall]
        [recall]
            role=clasher_intendant
        [/recall]
    [/event]
#enddef

#define SPAWNER_SIDE SIDE TYPE TERRAIN RATE CAP STARTERS
    [side]
        side={SIDE}
        defeat_condition=never
        controller=ai
        no_leader=yes
        hidden=yes
        color=brown
        [ai]
            village_value=0
            [avoid]
                terrain=*^V*
            [/avoid]
        [/ai]
    [/side]
    [event]
        id={TYPE}
        name=turn end
        first_time_only=no
        [if]
            [have_unit]
                type={TYPE}
                count=0-$({CAP} - 1)
            [/have_unit]
            [then]
                [if]
                    [lua]
                        code=<< local t = ...
                                return (mathx.random() < tonumber(t.rate)) >>
                        [args]
                            rate={RATE}
                        [/args]
                    [/lua]
                    [then]
                        {SCATTER_UNITS 1 {TYPE} 1 (
                            {EVERYWHERE}
                            terrain={TERRAIN}
                        ) (side,animate={SIDE},yes) }
                    [/then]
                [/if]
            [/then]
        [/if]
    [/event]
    [event]
        name=prestart
        {SCATTER_UNITS {STARTERS} {TYPE} 1 (
            {EVERYWHERE}
            terrain={TERRAIN}
        ) (side={SIDE}) }
    [/event]
#enddef

#define BOOK_LEARNING X Y AMOUNT
    [event]
        name=moveto
        [filter]
            x,y={X},{Y}
            side=1
        [/filter]
        [modify_unit]
            [filter]
                id=$unit.id
            [/filter]
            experience="$($unit.experience + {AMOUNT})"
        [/modify_unit]
        {VARIABLE amount {AMOUNT}}
        [floating_text]
            x,y=$x1,$y1
            text="<span color='cyan'>" + _ "+$amount experience" + "</span>"
        [/floating_text]
        {CLEAR_VARIABLE amount}
    [/event]
#enddef

#define SAPPHIRE_OF_ICE
    [object]
        name= _ "Sapphire of Ice"
        image=items/ball-blue.png
        description= _ "This sapphire grants the bearer a ranged cold attack!"
        [effect]
            apply_to=new_attack
            name=sapphire of ice
            description=_"sapphire of ice"
            type=cold
            [specials]
                {WEAPON_SPECIAL_MAGICAL}
            [/specials]
            range=ranged
            damage=4
            number=3
            icon=attacks/iceball.png
        [/effect]
        [effect]
            apply_to=attack
            name=sapphire of ice
            times=per level
            increase_damage=2
        [/effect]
        [effect]
            [filter]
                side=1 # Show only for the player, not the unit that drops it.
            [/filter]
            apply_to=overlay
            add=overlays/ball-blue-icon.png
        [/effect]
        [effect]
            apply_to=new_animation
            # Animation copied from Saurian Oracle.
            [attack_anim]
                [filter_attack]
                    name=sapphire of ice
                [/filter_attack]
                {MISSILE_FRAME_ICE}
                {HALO_FRAME_SAURIAN}
            [/attack_anim]
        [/effect]
    [/object]
#enddef
