#textdomain wesnoth-help

#define WEAPON_SPECIAL_SONG_VERSE ACTIVE_ON X DISTINGUISHER
    [disable]
        id = verse_{DISTINGUISHER}
        [filter_self]
            formula = "self.wml_vars.consecutive_attacks != {X}"
        [/filter_self]
        {ACTIVE_ON}
    [/disable]
#enddef

#define SONG_VERSE_EVENTS X DISTINGUISHER
    [event]
        name = attack end
        first_time_only = no

        [filter_attack]
            special_id = verse_{DISTINGUISHER}
        [/filter_attack]

        [modify_unit]
            [filter]
                find_in = unit
            [/filter]

            [set_variable]
                name = attacked_this_turn
                value = 1
            [/set_variable]
        [/modify_unit]
    [/event]

    [event]
        name = new turn
        first_time_only = no
        id = song_verse_new_turn_{X}

        [modify_unit]
            [filter]
                side = $side_number
                [has_attack]
                    special_id = verse_{DISTINGUISHER}
                [/has_attack]
            [/filter]

            [set_variable]
                name = attacked_this_turn
                value = 0
            [/set_variable]
        [/modify_unit]
    [/event]

    [event]
        name = recruit, recall, post advance
        first_time_only = no
        id = song_verse_placed_{X}

        [filter]
            [has_attack]
                special_id = verse_{DISTINGUISHER}
            [/has_attack]
        [/filter]

        [modify_unit]
            [filter]
                find_in = unit
            [/filter]

            [set_variable]
                name = consecutive_attacks
                value = 0
            [/set_variable]
            [set_variable]
                name = attacked_this_turn
                value = 0
            [/set_variable]
        [/modify_unit]
    [/event]

    [event]
        name = side turn end
        first_time_only = no
        id = song_verse_main_{X}

        [store_unit]
            [filter]
                side = $side_number
                [has_attack]
                    special_id = verse_{DISTINGUISHER}
                [/has_attack]
            [/filter]

            variable = verse_units
        [/store_unit]
        [foreach]
            array = verse_units
            [do]
                [if]
                    [have_unit]
                        find_in = this_item
                        formula = "self.wml_vars.consecutive_attacks < {X}"
                    [/have_unit]
                    [then]
                        [modify_unit]
                            [filter]
                                find_in = this_item
                            [/filter]

                            [set_variable]
                                name = consecutive_attacks
                                add = 1
                            [/set_variable]
                        [/modify_unit]
                    [/then]
                    [else]
                        [modify_unit]
                            [filter]
                                find_in = this_item
                            [/filter]

                            [set_variable]
                                name = consecutive_attacks
                                value = 0
                            [/set_variable]
                        [/modify_unit]
                    [/else]
                [/if]
                [modify_unit]
                    [filter]
                        find_in = this_item
                        formula = "self.wml_vars.attacked_this_turn = 0"
                    [/filter]

                    [set_variable]
                        name = consecutive_attacks
                        value = 0
                    [/set_variable]
                [/modify_unit]
            [/do]
        [/foreach]
    [/event]
    [event]
        name = attack_end
        first_time_only = no
        id = song_verse_illuminates

        [filter_attack]
            name = sun incarnate
        [/filter_attack]

        [object]
            id = song_$unit.underlying_id|_$turn_number

            [effect]
                apply_to = new_ability
                [abilities]
                    {ABILITY_ILLUMINATES}
                [/abilities]
            [/effect]
            [effect]
                apply_to = halo
                halo = halo/illuminates-aura.png~CS(50,20,-70)
            [/effect]

            duration = scenario
        [/object]
        [event]
            name = "side $side_number turn $($turn_number + 3)"
            delayed_variable_substitution = no
            [remove_object]
                object_id = song_$unit.underlying_id|_$turn_number
            [/remove_object]
        [/event]
    [/event]
#enddef

#define STR_VERSE_RESTRICT_1
_ "This attack can only be used as the first verse of the song."#enddef

#define STR_VERSE_RESTRICT_2
_ "This attack can only be used as the second verse of the song."#enddef

#define STR_VERSE_RESTRICT_3
_ "This attack can only be used as the third verse of the song."#enddef

#define STR_VERSE_NAME_1
_ "first verse"#enddef

#define STR_VERSE_NAME_2
_ "second verse"#enddef

#define STR_VERSE_NAME_3
_ "third verse"#enddef

#define SONG_VERSE_DESCRIPTION X
    [dummy]
        name = {STR_VERSE_NAME_{X}}
        description = {STR_VERSE_RESTRICT_{X}}
    [/dummy]
#enddef

#define WEAPON_SPECIAL_ONCE_PER_TURN ATTACK_NAME
    [disable]
        id = once_per_turn
        name = _ "once per turn"
        description = _ "This attack can be used offensively only once per turn"
        [filter_self]
            formula = "self.wml_vars.{ATTACK_NAME}_used > 0"
        [/filter_self]
        active_on = offense
    [/disable]
#enddef

#define WEAPON_SPECIAL_ONCE_PER_TURN_EVENTS
    [event]
        name = attack end
        first_time_only = no

        [filter_attack]
            special_id = once_per_turn
        [/filter_attack]

        [modify_unit]
            [filter]
                find_in = unit
            [/filter]

            [set_variable]
                name = $weapon.name|_used
                value = 1
            [/set_variable]
        [/modify_unit]
    [/event]
    [event]
        name = turn end
        first_time_only = no

        [modify_unit]
            [filter]
                [has_attack]
                    special_id = once_per_turn_$weapon.name
                [/has_attack]
            [/filter]

            [set_variable]
                name = $weapon.name|_used
                value = 0
            [/set_variable]
        [/modify_unit]
    [/event]
#enddef

#define WEAPON_SPECIAL_NOVA
    [dummy]
        id = nova
        name = _"nova"
        description= _ "This weapon, when used offensively, deals damage to all units adjacent to the caster when it hits."
        special_note=_ "This unit has wide-area attacks centered on the caster."
        active_on = offense
    [/dummy]
#enddef

#define WEAPON_SPECIAL_NOVA_EVENTS
    [event]
        name = attacker_hits
        id = nova
        first_time_only = no
        [filter_attack]
            special_id = nova
        [/filter_attack]
        [harm_unit]
            [filter]
                [not]
                    find_in = second_unit
                [/not]
                [filter_adjacent]
                    find_in = unit
                [/filter_adjacent]
            [/filter]
            amount = $weapon.damage
            damage_type = $weapon.type
            alignment = $unit.alignment
            kill = yes
            experience = yes
            fire_event = yes
        [/harm_unit]
    [/event]
#enddef

#define WEAPON_SPECIAL_RAY
    [dummy]
        id = ray
        name = _"ray"
        description= _ "This weapon, when used offensively, also deals damage to a unit behind the target."
        active_on = offense
    [/dummy]
#enddef

#define WEAPON_SPECIAL_RAY_EVENTS
    [event]
        name = attacker_hits
        id = ray_hits
        first_time_only = no
        [filter_attack]
            special_id = ray
        [/filter_attack]
        [harm_unit]
            [filter]
                [filter_adjacent]
                    find_in = second_unit
                    formula = "
                        unit_at(direction_from(self.loc,caster.facing)) = other
                    where
                        caster = unit_at(direction_from(self.loc, self.facing))
                    "
                [/filter_adjacent]
            [/filter]
            amount = $weapon.damage
            damage_type = $weapon.type
            alignment = $unit.alignment
            kill = yes
            experience = yes
            fire_event = yes
        [/harm_unit]
    [/event]
#enddef

#define UTBS_ABILITY_TAILWIND X
    [tailwind]
        id = tailwind
        value = {X}
    [/tailwind]
#enddef

#define UTBS_TAILWIND_EVENTS
    [event]
        name=turn refresh
        first_time_only=no
        id=tailwind

        # This hardcodes that only tailwind+1 and tailwind+2 are supported, which simplifies the code to avoid them
        # stacking (so a unit adjacent to both a tailwind+1 and a tailwind+2 will only get +2 rather than +3).
        # If more levels should be supported, a loop can be added, but that will make the code more complex.
        [store_unit]
            [filter]
                ability=tailwind
                [filter_side]
                    [allied_with]
                        side=$side_number
                    [/allied_with]
                [/filter_side]
                [and]
                    # filter_wml is slow, which is why there's already an ability=tailwind filter before this
                    [filter_wml]
                        [abilities]
                            [tailwind]
                                id=tailwind
                                value=2
                            [/tailwind]
                        [/abilities]
                    [/filter_wml]
                [/and]
            [/filter]
            variable=utbs_tailwind2_sources
        [/store_unit]
        [store_unit]
            [filter]
                ability=tailwind
                [filter_side]
                    [allied_with]
                        side=$side_number
                    [/allied_with]
                [/filter_side]
                [and]
                    # filter_wml is slow, which is why there's already an ability=tailwind filter before this
                    [filter_wml]
                        [abilities]
                            [tailwind]
                                id=tailwind
                                value=1
                            [/tailwind]
                        [/abilities]
                    [/filter_wml]
                [/and]
            [/filter]
            variable=utbs_tailwind1_sources
        [/store_unit]

        [modify_unit]
            [filter]
                side=$side_number
                [filter_adjacent]
                    find_in=utbs_tailwind2_sources
                [/filter_adjacent]
            [/filter]
            moves="$($this_unit.moves + 2)"
        [/modify_unit]
        [modify_unit]
            [filter]
                side=$side_number
                [filter_adjacent]
                    find_in=utbs_tailwind1_sources
                [/filter_adjacent]
                [not]
                    [filter_adjacent]
                        find_in=utbs_tailwind2_sources
                    [/filter_adjacent]
                [/not]
            [/filter]
            moves="$($this_unit.moves + 1)"
        [/modify_unit]

        {CLEAR_VARIABLE utbs_tailwind1_sources,utbs_tailwind2_sources}
    [/event]
#enddef

#define STR_TAILWIND_RESTRICT_1
_ "At the start of the turn this unit increases movement points of surrounding units by +1"#enddef

#define STR_TAILWIND_RESTRICT_2
_ "At the start of the turn this unit increases movement points of surrounding units by +2"#enddef

#define UTBS_TAILWIND_DESCRIPTION X
    [dummy]
        name = _ "tailwind +"+{X}
        description = {STR_TAILWIND_RESTRICT_{X}}
    [/dummy]
#enddef

# These are all direct clones of the mainline healing abilities, except that
# they are set to exclude units suffering from dehydration. Dehydration is only
# delayed by healers, so they must not actually heal a dehydrated unit any
# hitpoints.
#
# The ability macros go into wesnoth textdomain since the strings are identical
# to their core counterparts, but the special notes belong to wesnoth-utbs.

#define UTBS_ABILITY_HEALS
    [heals]
        value=4
        id=healing
        affect_allies=yes
        name= _ "heals +4"
        female_name= _ "female^heals +4"
        description=  _ "Allows the unit to heal adjacent allied units at the beginning of our turn.

A unit cared for by this healer may heal up to 4 HP per turn, or stop poison from taking effect for that turn.
A poisoned unit cannot be cured of its poison by a healer, and must seek the care of a village or a unit that can cure."
        special_note=_"This unit is capable of basic healing and slowing dehydration."
        affect_self=no
        poison=slowed
        [affect_adjacent]
            [filter]
                [not]
                    status=dehydration_slowed_by_healer
                [/not]
            [/filter]
        [/affect_adjacent]
    [/heals]
#enddef

#define UTBS_ABILITY_EXTRA_HEAL_NO_NOTES
    [heals]
        value=8
        id=healing
        affect_allies=yes
        name= _ "heals +8"
        female_name= _ "female^heals +8"
        description= _ "This unit combines herbal remedies with magic to heal units more quickly than is normally possible on the battlefield.

A unit cared for by this healer may heal up to 8 HP per turn, or stop poison from taking effect for that turn.
A poisoned unit cannot be cured of its poison by a healer, and must seek the care of a village or a unit that can cure."
        affect_self=no
        poison=slowed
        [affect_adjacent]
            [filter]
                [not]
                    status=dehydration_slowed_by_healer
                [/not]
            [/filter]
        [/affect_adjacent]
    [/heals]
#enddef

#define UTBS_ABILITY_EXTRA_HEAL
    {UTBS_ABILITY_EXTRA_HEAL_NO_NOTES}
    [+heals]
        special_note=_"This unit is capable of basic healing and slowing dehydration."
    [/heals]
#enddef

#define UTBS_ABILITY_SUPER_HEAL_NO_NOTES
    [heals]
        value=12
        id=healing
        affect_allies=yes
        name= _ "heals +12"
        female_name= _ "female^heals +12"
        description= _ "This unit combines herbal remedies with magic to heal units more quickly than is normally possible on the battlefield.

A unit cared for by this healer may heal up to 12 HP per turn, or stop poison from taking effect for that turn.
A poisoned unit cannot be cured of its poison by a healer, and must seek the care of a village or a unit that can cure."
        affect_self=no
        poison=slowed
        [affect_adjacent]
            [filter]
                [not]
                    status=dehydration_slowed_by_healer
                [/not]
            [/filter]
        [/affect_adjacent]
    [/heals]
#enddef

#define UTBS_ABILITY_SUPER_HEAL
    {UTBS_ABILITY_SUPER_HEAL_NO_NOTES}
    [+heals]
        special_note=_"This unit is capable of basic healing and slowing dehydration."
    [/heals]
#enddef

#define UTBS_NOTE_CURES
    [+heals]
        special_note=_"This unit is capable of healing those around it, slowing dehydration, and curing them of poison."
    [/heals]
#enddef

#define UTBS_ABILITY_CURES
    {INTERNAL:ABILITY_UNPOISON_NO_NOTES}
    {UTBS_ABILITY_EXTRA_HEAL}
    {UTBS_NOTE_CURES}
#enddef

#define UTBS_ABILITY_SUPER_CURES
    {INTERNAL:ABILITY_UNPOISON_NO_NOTES}
    {UTBS_ABILITY_SUPER_HEAL}
    {UTBS_NOTE_CURES}
#enddef

#textdomain wesnoth-utbs

#define NOTE_ETHEREAL
    [special_note]
        note=_"SPECIAL_NOTE^This unit is able to move through solid stone walls."
    [/special_note]
#enddef

# This is the Teaching ability owned by Garak

#define ABILITY_TEACHING
    [dummy]
        id=teaching
        name= _ "teaching"
        female_name= _ "female^teaching"
        description= _ "At the start of every turn, this unit redistributes its experience points to all the units of the same side adjacent to it. If no suitable unit is adjacent, its experience just goes back to zero."
    [/dummy]
#enddef

#define WEAPON_SPECIAL_SHOCK
    # Canned definition of the Shock ability to be included in a
    # [specials] clause.
    [attacks]
        id=shock
        name= _ "shock"
        description= _ "When this attack is used on offense, the opponent will retaliate with one less strike than normally, to a minimum of one strike."
        special_note=_"This unit’s melee attack can overwhelm the defenses of enemies, preventing them from retaliating as effectively."
        sub=1
        active_on=offense
        apply_to=opponent
        [filter_base_value]
            greater_than=1
        [/filter_base_value]
    [/attacks]
#enddef

#define FORMATION ID GREATER_THAN COUNT
    [chance_to_hit]
        id={ID}
        apply_to=opponent
        sub=10
        [filter_base_value]
            greater_than_equal_to={GREATER_THAN}
        [/filter_base_value]
        [filter_self]
            [filter_adjacent]
                is_enemy=no
                count={COUNT}
                ability=formation
            [/filter_adjacent]
        [/filter_self]
    [/chance_to_hit]
#enddef

#define ABILITY_FORMATION
    [chance_to_hit]
        id=formation
        name= _ "formation"
        female_name= _ "female^formation"
        description= _ "This unit gains a +10% bonus to defense when another unit with the same ability is adjacent to it. However, this cannot raise the unit’s defense above 70%."
        special_note=_"Groups of units of this type are able to shield each other in combat."
        apply_to=opponent
        sub=10
        [filter_base_value]
            greater_than_equal_to=40
        [/filter_base_value]
        [filter]
            [filter_adjacent]
                ability=formation
                is_enemy=no
                count=1-5
            [/filter_adjacent]
        [/filter]
    [/chance_to_hit]
    {FORMATION formation2 50 2-5}
    {FORMATION formation3 60 3-5}
    {FORMATION formation4 70 4-5}
    {FORMATION formation5 80 5}
#enddef

#define ABILITY_DISENGAGE
    [dummy]
        id=disengage
        name= _ "disengage"
        female_name= _ "female^disengage"
        description= _ "If this unit doesn’t move before attacking, it will retain its movement points after the attack."
        special_note=_"This unit can move either before or after attacking."
    [/dummy]
#enddef

#define WEAPON_SPECIAL_DAZE
    [dummy]
        id=daze
        name= _ "daze"
        description= _ "When hit with this attack, an enemy suffers a 10% penalty both to their defense and chance to hit for one turn. Other specials that affect chance to hit (e.g. magical and marksman) take precedence over this special.

Magical attacks will still have a 70% chance to hit.
Marksman attacks are only affected if the chance to hit is greater than 60%."
        special_note=_"This unit can daze its enemies, reducing their accuracy and defense until they end a turn."
    [/dummy]
#enddef

#define ABILITY_DISTRACT
    [skirmisher]
        id=distract
        name= _ "distract"
        female_name= _ "female^distract"
        description= _ "This unit negates enemy Zones of Control around itself for allied units (but not for itself)."
        special_note=_"This unit is capable of distracting opponents, allowing allied units to trespass their Zones of Control and move unhindered around them."
        affect_self=no
        affect_allies=yes
        [affect_adjacent]
        [/affect_adjacent]
    [/skirmisher]
#enddef

#define ABILITY_SUPPORT
    [dummy]
        id=support
        name= _ "support"
        female_name= _ "female^support"
        description= _ "The upkeep costs of adjacent friendly units are lowered by 1."
    [/dummy]
#enddef

#define ABILITY_DISENGAGE_EVENTS
    [event]
        name=attack end
        first_time_only=no

        [filter]
            ability=disengage

            formula = "self.moves<self.max_moves"
        [/filter]

        {VARIABLE unit.moves 0}

        [unstore_unit]
            variable=unit
            find_vacant=no
        [/unstore_unit]
    [/event]
#enddef

#define WEAPON_SPECIAL_DAZE_EVENTS
    [event]
        id=weapon_special_daze_event_2
        name=attacker hits
        first_time_only=no

        [filter_attack]
            special_id=daze
        [/filter_attack]

        [filter_second]
            [not]
                [filter_wml]
                    [status]
                        dazed=yes
                    [/status]
                [/filter_wml]
            [/not]
        [/filter_second]

        {VARIABLE second_unit.status.dazed yes}

        [unstore_unit]
            variable=second_unit
            find_vacant=no
            text= _ "dazed"
            female_text = _ "female^dazed"
            red,green,blue=196,196,128
        [/unstore_unit]

        [object]
            silent=yes
            duration=scenario

            [filter]
                x,y=$x2,$y2
                [not]
                    ability=self_dazed
                [/not]
            [/filter]

            [effect]
                apply_to=new_ability
                [abilities]
                    [chance_to_hit]
                        id=enemy_dazed
                        name=""
                        description=""
                        add=10
                        apply_to=opponent
                        [filter_student]
                            [filter_wml]
                                [status]
                                    dazed=yes
                                [/status]
                            [/filter_wml]
                        [/filter_student]
                        [filter_opponent]
                            [filter_weapon]
                                [not]
                                    special_id=magical
                                [/not]
                                [not]
                                    special_id_active=marksman
                                [/not]
                            [/filter_weapon]
                        [/filter_opponent]
                    [/chance_to_hit]
                    [chance_to_hit]
                        id=enemy_dazed
                        name=""
                        description=""
                        add=10
                        apply_to=opponent
                        [filter_base_value]
                            greater_than_equal_to=60
                        [/filter_base_value]
                        [filter_student]
                            [filter_wml]
                                [status]
                                    dazed=yes
                                [/status]
                            [/filter_wml]
                        [/filter_student]
                        [filter_opponent]
                            [filter_weapon]
                                special_id_active=marksman
                            [/filter_weapon]
                        [/filter_opponent]
                    [/chance_to_hit]
                    [chance_to_hit]
                        id=self_dazed
                        name=""
                        description=""
                        sub=10
                        [filter_student]
                            [filter_weapon]
                                [not]
                                    special_id=magical
                                [/not]
                                [not]
                                    special_id_active=marksman
                                [/not]
                            [/filter_weapon]
                            [filter_wml]
                                [status]
                                    dazed=yes
                                [/status]
                            [/filter_wml]
                        [/filter_student]
                    [/chance_to_hit]
                    [chance_to_hit]
                        id=self_dazed
                        name=""
                        description=""
                        sub=10
                        [filter_base_value]
                            greater_than_equal_to=70
                        [/filter_base_value]
                        [filter_student]
                            [filter_weapon]
                                special_id_active=marksman
                            [/filter_weapon]
                            [filter_wml]
                                [status]
                                    dazed=yes
                                [/status]
                            [/filter_wml]
                        [/filter_student]
                    [/chance_to_hit]
                [/abilities]
            [/effect]
        [/object]
    [/event]

    [event]
        id=weapon_special_daze_event_3
        name=side turn
        first_time_only=no

        [event]
            name=side turn
            delayed_variable_substitution=no

            #{DEBUG_MSG "side $|side_number turn started, clearing daze from side $side_number units"}

            [modify_unit]
                [filter]
                    side=$side_number
                    [filter_wml]
                        [status]
                            dazed=yes
                        [/status]
                    [/filter_wml]
                [/filter]

                [status]
                    dazed=no
                [/status]
            [/modify_unit]
        [/event]
    [/event]
#enddef

#define ABILITY_SUPPORT_EVENTS
    [event]
        name=unit placed
        first_time_only=no

        [filter]
            side=1

            [not]
                level=0
            [/not]

            [filter_wml]
                upkeep=full
            [/filter_wml]

            [filter_adjacent]
                ability=support
            [/filter_adjacent]
        [/filter]

        {VARIABLE unit.variables.original_upkeep $unit.upkeep}
        {VARIABLE unit.variables.upkeep_supported yes}
        {VARIABLE unit.upkeep "$($unit.level - 1)"}

        [unstore_unit]
            variable=unit
            find_vacant=no
            fire_event=no
        [/unstore_unit]
    [/event]

    [event]
        name=set_support_upkeep
        first_time_only=no

        [foreach]
            array=update_support_units
            variable=support_unit

            [do]
                [if]
                    [have_unit]
                        x,y=$support_unit.x,$support_unit.y

                        [not]
                            level=0
                        [/not]

                        [filter_wml]
                            upkeep=full
                        [/filter_wml]

                        [filter_adjacent]
                            ability=support
                        [/filter_adjacent]
                    [/have_unit]

                    [then]
                        {VARIABLE support_unit.variables.original_upkeep $support_unit.upkeep}
                        {VARIABLE support_unit.variables.upkeep_supported yes}
                        {VARIABLE support_unit.upkeep "$($support_unit.level - 1)"}
                    [/then]

                    [else]
                        [if]
                            [have_unit]
                                x,y=$support_unit.x,$support_unit.y

                                [not]
                                    level=0
                                [/not]

                                [filter_wml]
                                    [variables]
                                        upkeep_supported=yes
                                    [/variables]
                                [/filter_wml]

                                [not]
                                    [filter_adjacent]
                                        ability=support
                                    [/filter_adjacent]
                                [/not]
                            [/have_unit]

                            [then]
                                {VARIABLE support_unit.upkeep $support_unit.variables.original_upkeep}
                                {VARIABLE support_unit.variables.upkeep_supported no}
                            [/then]

                            [else]
                                [continue][/continue]
                            [/else]
                        [/if]
                    [/else]
                [/if]

                [unstore_unit]
                    variable=support_unit
                    find_vacant=no
                    fire_event=no
                [/unstore_unit]
            [/do]
        [/foreach]
    [/event]

    [event]
        name=moveto
        first_time_only=no

        [filter]
            side=1
            ability=support
        [/filter]

        [store_unit]
            [filter]
                [filter_wml]
                    upkeep=full
                [/filter_wml]

                [filter_adjacent]
                    x,y=$x1,$y1
                [/filter_adjacent]

                [or]
                    [filter_wml]
                        [variables]
                            upkeep_supported=yes
                        [/variables]
                    [/filter_wml]

                    [filter_location]
                        [filter_adjacent_location]
                            x,y=$x2,$y2
                        [/filter_adjacent_location]
                    [/filter_location]
                [/or]
            [/filter]

            kill=no
            variable=update_support_units
        [/store_unit]

        [fire_event]
            name=set_support_upkeep
        [/fire_event]

        {CLEAR_VARIABLE update_support_units}

        [on_undo]
            [store_unit]
                [filter]
                    [filter_wml]
                        upkeep=full
                    [/filter_wml]

                    [filter_location]
                        [filter_adjacent_location]
                            x,y=$x2,$y2
                        [/filter_adjacent_location]
                    [/filter_location]

                    [or]
                        [filter_wml]
                            [variables]
                                upkeep_supported=yes
                            [/variables]
                        [/filter_wml]

                        [filter_location]
                            [filter_adjacent_location]
                                x,y=$x1,$y1
                            [/filter_adjacent_location]
                        [/filter_location]
                    [/or]
                [/filter]

                kill=no
                variable=update_support_units
            [/store_unit]

            [fire_event]
                name=set_support_upkeep
            [/fire_event]

            {CLEAR_VARIABLE update_support_units}
        [/on_undo]

        [allow_undo]
        [/allow_undo]
    [/event]

    [event]
        name=moveto
        first_time_only=no

        [filter]
            side=1

            [not]
                ability=support
            [/not]

            [and]
                [filter_wml]
                    upkeep=full
                [/filter_wml]

                [filter_adjacent]
                    side=1
                    ability=support
                [/filter_adjacent]

                [or]
                    [filter_wml]
                        [variables]
                            upkeep_supported=yes
                        [/variables]
                    [/filter_wml]

                    [not]
                        [filter_adjacent]
                            side=1
                            ability=support
                        [/filter_adjacent]
                    [/not]
                [/or]
            [/and]
        [/filter]

        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]

            kill=no
            variable=update_support_units
        [/store_unit]

        [fire_event]
            name=set_support_upkeep
        [/fire_event]

        {CLEAR_VARIABLE update_support_units}

        [on_undo]
            [store_unit]
                [filter]
                    x,y=$x2,$y2
                [/filter]

                kill=no
                variable=update_support_units
            [/store_unit]

            [fire_event]
                name=set_support_upkeep
            [/fire_event]

            {CLEAR_VARIABLE update_support_units}
        [/on_undo]

        [allow_undo]
        [/allow_undo]
    [/event]

    [event]
        name=die,post advance
        first_time_only=no

        [filter]
            side=1
            ability=support
        [/filter]

        [store_unit]
            [filter]
                side=1

                [filter_adjacent]
                    x,y=$x1,$y1
                [/filter_adjacent]
            [/filter]

            kill=no
            variable=update_support_units
        [/store_unit]

        [fire_event]
            name=set_support_upkeep
        [/fire_event]

        {CLEAR_VARIABLE update_support_units}
    [/event]

    [event]
        name=post advance
        first_time_only=no

        [filter]
            side=1

            [filter_adjacent]
                ability=support
            [/filter_adjacent]
        [/filter]

        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]

            kill=no
            variable=update_support_units
        [/store_unit]

        [fire_event]
            name=set_support_upkeep
        [/fire_event]

        {CLEAR_VARIABLE update_support_units}
    [/event]
#enddef

[resource]
    id=utbs_ability_events
    {UTBS_TAILWIND_EVENTS}
    {WEAPON_SPECIAL_RAY_EVENTS}
    {WEAPON_SPECIAL_NOVA_EVENTS}
    {WEAPON_SPECIAL_ONCE_PER_TURN_EVENTS}
    {SONG_VERSE_EVENTS 0 2}
    {SONG_VERSE_EVENTS 1 2}
    {SONG_VERSE_EVENTS 0 3}
    {SONG_VERSE_EVENTS 1 3}
    {SONG_VERSE_EVENTS 2 3}
[/resource]
