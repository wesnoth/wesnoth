#textdomain wesnoth-h2tt

#define IS_ALLY
    #
    [filter_side]
        [allied_with]
            side=1
        [/allied_with]
    [/filter_side]
#enddef

#define IS_ALLY_OF_UNIT SUF
    #
    [filter_side]
        [allied_with]
            [has_unit]
                {SUF}
            [/has_unit]
        [/allied_with]
    [/filter_side]
#enddef

# use these macros for [if] statements that open/close on the same line as other tags,
# or else translations will complain
#define IF
    [if]
#enddef
#define /IF
[/if]
#enddef
#define ELSEIF
    [elseif]
#enddef
#define /ELSEIF
[/elseif]
#enddef

#define NOT FILTER
    #  <-- this newline lets you use {NOT} inline, instead of needing a new line
    [not]
        {FILTER}
    [/not]
#enddef

#define OR FILTER
    #  <-- this newline lets you use {OR} inline, instead of needing a new line
    [or]
        {FILTER}
    [/or]
#enddef

#define AND FILTER
    #  <-- this newline lets you use {AND} inline, instead of needing a new line
    [and]
        {FILTER}
    [/and]
#enddef

#define FILTER FILT
    #  <-- this newline lets you use {FILTER} inline, instead of needing a new line
    [filter]
        {FILT}
    [/filter]
#enddef

#define FILTER_SECOND FILT
    #  <-- this newline lets you use {FILTER_SECOND} inline, instead of needing a new line
    [filter_second]
        {FILT}
    [/filter_second]
#enddef

#define FILTER_LOCATION FILT
    #  <-- this newline lets you use {FILTER_LOCATION} inline, instead of needing a new line
    [filter_location]
        {FILT}
    [/filter_location]
#enddef

#define FILTER_LOCATION_ENEMY FILT
    #  <-- this newline lets you use {FILTER_LOCATION_ENEMY} inline, instead of needing a new line
    [filter_location_enemy]
        {FILT}
    [/filter_location_enemy]
#enddef

#define FILTER_ADJACENT FILT
    #  <-- this newline lets you use {FILTER_ADJACENT} inline, instead of needing a new line
    [filter_adjacent]
        {FILT}
    [/filter_adjacent]
#enddef

#define FILTER_ADJACENT_LOCATION FILT
    #  <-- this newline lets you use {FILTER_ADJACENT_LOCATION} inline, instead of needing a new line
    [filter_adjacent_location]
        {FILT}
    [/filter_adjacent_location]
#enddef

#define FILTER_VISION FILT
    #  <-- this newline lets you use {FILTER_VISION} inline, instead of needing a new line
    [filter_vision]
        {FILT}
    [/filter_vision]
#enddef

#define FILTER_ABILITY FILT
    #  <-- this newline lets you use {FILTER_ABILITY} inline, instead of needing a new line
    [filter_ability]
        {FILT}
    [/filter_ability]
#enddef

#define FILTER_WEAPON FILT
    #  <-- this newline lets you use {FILTER_WEAPON} inline, instead of needing a new line
    [filter_weapon]
        {FILT}
    [/filter_weapon]
#enddef

#define FILTER_ATTACK FILT
    #  <-- this newline lets you use {FILTER_ATTACK} inline, instead of needing a new line
    [filter_attack]
        {FILT}
    [/filter_attack]
#enddef

#define FILTER_SECOND_ATTACK FILT
    #  <-- this newline lets you use {FILTER_SECOND_ATTACK} inline, instead of needing a new line
    [filter_second_attack]
        {FILT}
    [/filter_second_attack]
#enddef

#define FILTER_SIDE FILT
    #
    [filter_side]
        {FILT}
    [/filter_side]
#enddef

#define FILTER_WML_OBJECT_ID ID
    #
    [filter_wml]
        [modifications]
            [object]
                id={ID}
            [/object]
        [/modifications]
    [/filter_wml]
#enddef
#define FILTER_OBJECT_ID ID
    #
    [filter]
        {FILTER_WML_OBJECT_ID {ID}}
    [/filter]
#enddef

#define HAS_ATTACK FILTER
    #  <-- this newline lets you use {HAS_ATTACK} inline, instead of needing a new line
    [has_attack]
        {FILTER}
    [/has_attack]
#enddef

#define THEN WML
    #  <-- this newline lets you use {THEN} inline, instead of needing a new line
    [then]
        {WML}
    [/then]
#enddef

#define ELSE WML
    #  <-- this newline lets you use {ELSE} inline, instead of needing a new line
    [else]
        {WML}
    [/else]
#enddef

#define HAVE_UNIT WML
    #  <-- this newline lets you use {HAVE_UNIT} inline, instead of needing a new line
    [have_unit]
        {WML}
    [/have_unit]
#enddef

#define HAS_UNIT WML
    #  <-- this newline lets you use {HAS_UNIT} inline, instead of needing a new line
    [has_unit]
        {WML}
    [/has_unit]
#enddef

#define HAVE_LOCATION WML
    #
    [have_location]
        {WML}
    [/have_location]
#enddef

#define LUA WML
    #
    [lua]
        code={WML}
    [/lua]
#enddef

#define FILTER_CONDITION WML
    #
    [filter_condition]
        {WML}
    [/filter_condition]
#enddef

# meant to be used in a [message] tag
#define SHOW_IF_VISIBLE FLT
    #
    [show_if]
        {HAVE_UNIT( {FLT} {FILTER_VISION visible,side=yes,1} )}
    [/show_if]
#enddef
