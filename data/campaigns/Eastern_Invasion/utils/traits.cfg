#textdomain wesnoth-ei

# Mal-Ravanal has this trait, and Dacyn gets it after he advances to Fallen Mage
# (it's completely useless for Dacyn, who has obscures, but it parallels his similarities with Mal-Ravanal)
#define TRAIT_AUDACIOUS
    [trait] # clone of fearless
        id=audacious
        male_name= _ "audacious"
        description= _ "Fights normally during unfavorable times of day/night"
        help_text= _ "Aversion to light and dark holds no sway over these audacious individuals."
        [effect]
            apply_to="fearless"
        [/effect]
    [/trait]
#enddef

#define TRAIT_DESERTER
    [trait]
        id=deserter
        male_name= _ "deserter"
        female_name= _ "female^deserter"
        description= _ "When this unit drops below half health, it will flee the battle and reappear on your recall list."
        # NOTE - implmentation is handled using [event]s in _main.cfg
    [/trait]
#enddef

#define DESERTER_EVENT FLT UNIT
    first_time_only=no
    [{FLT}]
        side=1 # don't use this trait for the AI humans in S20
        trait=deserter
        formula=(self.hitpoints < self.max_hitpoints/2)
    [/{FLT}]
    [filter_condition]
        [have_unit]
            side,id=1,Dacyn # prevent this from triggering at the very beginning of S11_Captured, when fighting bats (since you can't desert when you're already a prisoner)
        [/have_unit]        # also prevents this from triggering in S20, when the deserters are AI-controlled
    [/filter_condition]

    {RANDOM (_"Forget this!",_"Run for your lives!",_"Get me out of here!")}
    [message]
        speaker=${UNIT}.id
        message=$random
    [/message]
    {CLEAR_VARIABLE random}
    [put_to_recall_list]
        id,heal=${UNIT}.id,yes
    [/put_to_recall_list]
    [message]
        speaker=narrator
        message= _ "The ‘deserter’ trait has caused ${UNIT}.name to flee back to your recall list."
        image=wesnoth-icon.png
    [/message]
#enddef
#define GLOBAL__TRAIT_DESERTER
    [event]
        name=attacker hits
        {DESERTER_EVENT filter_second second_unit}
    [/event]
    [event]
        name=defender hits
        {DESERTER_EVENT filter unit}
    [/event]
#enddef

#define TRAIT_MERCENARY
    [trait]
        id=mercenary
        male_name= _ "mercenary"
        female_name= _ "female^deserter"
        description= _ "<span color='#00FF00'>+30%</span> base damage when gold is positive.
<span color='#FF0000'>-30%</span> base damage when gold is 0 or negative."
    [/trait]
#enddef

#define GLOBAL__TRAIT_MERCENARY
    # only supported for side 1
    [event]
        name=side 1 turn refresh # after this turn's income
        first_time_only=no
        [fire_event]
            name=mercenary_refresh
        [/fire_event]
    [/event]
    [event]
        name=recruit,recall,moveto # these events can cost or gain gold
        first_time_only=no

        [filter]
            side=1
        [/filter]

        [fire_event]
            name=mercenary_refresh
        [/fire_event]
        [on_undo]
            [fire_event]
                name=mercenary_refresh
            [/fire_event]
        [/on_undo]
        [allow_undo]
        [/allow_undo]
    [/event]
    [event]
        name=mercenary_refresh
        first_time_only=no
        [remove_object]
            object_id=mercenary_buff
        [/remove_object]
        [remove_object]
            object_id=mercenary_debuff
        [/remove_object]
        [store_gold]
            side=1
        [/store_gold]
        [if]
            [variable]
                name=gold
                greater_than=0
            [/variable]

            [then]
                [modify_unit]
                    [filter]
                        side,trait=1,mercenary
                    [/filter]

                    [object]
                        id=mercenary_buff
                        [effect]
                            apply_to,increase_damage=attack,+30%
                        [/effect]
                    [/object]
                [/modify_unit]
            [/then]
            [else]
                [modify_unit]
                    [filter]
                        side,trait=1,mercenary
                    [/filter]

                    [object]
                        id=mercenary_debuff
                        [effect]
                            apply_to,increase_damage=attack,-30%
                        [/effect]
                    [/object]
                [/modify_unit]
            [/else]
        [/if]
    [/event]
#enddef

#define RESIST_DAMAGE DAMAGE PERCENTAGE
    [resistance]
        affect_self=yes
        [filter_self]
            [filter_adjacent]
                # ok, ok, yes, I know, this will trigger even if you're attacking non-undead as long as you're adjacent to undead.
                # but that's such an unusual edge case, and I don't know how to filter this by enemy
                trait=undead

                [or]
                    type_adv_tree=Dark Adept,Vampire Bat
                [/or]
            [/filter_adjacent]
        [/filter_self]
        [filter_second_weapon]
            damage={DAMAGE}
        [/filter_second_weapon]
        add={PERCENTAGE}
        max_value=100 # required by WML
    [/resistance]
#enddef
#define TRAIT_SURVIVOR
    [trait]
        id=survivor
        male_name= _ "survivor"
        female_name= _ "female^survivor"
        description= _ "<span color='#00FF00'>+1</span> damage to and <span color='#00FF00'>-1</span> damage from undead, necromancers, and bats.

Against all odds, this unit has endured the terrors and tortures of Mal-Ravanal’s prisons and lived to tell the tale. Survivors bear a heavy burden from their time in captivity, but have also learned much of the strengths and weaknesses of their former captors."

        # nice and simple, just give +1 damage vs undead
        [effect]
            apply_to=attack # all attacks
            [set_specials]
                mode=append
                [damage]
                    apply_to=self
                    [filter_opponent] # note that I also use this filter in the implementation for the Sentinel shield
                        trait=undead

                        [or]
                            type_adv_tree=Dark Adept,Vampire Bat
                        [/or]
                    [/filter_opponent]
                    add=1
                [/damage]
            [/set_specials]
        [/effect]

        # resistance only works by percentages, so to implement -1 damage
        # I need a separate hard-coded percentage for each possible attack
        # TODO: make this less janky
        [effect]
            apply_to=new_ability
            [abilities]
                {RESIST_DAMAGE  1 100.00}
                {RESIST_DAMAGE  2 50.00}
                {RESIST_DAMAGE  3 33.33}
                {RESIST_DAMAGE  4 25.00}
                {RESIST_DAMAGE  5 20.00}
                {RESIST_DAMAGE  6 16.67}
                {RESIST_DAMAGE  7 14.29}
                {RESIST_DAMAGE  8 12.50}
                {RESIST_DAMAGE  9 11.11}
                {RESIST_DAMAGE 10 10.00}
                {RESIST_DAMAGE 11  9.09}
                {RESIST_DAMAGE 12  8.33}
                {RESIST_DAMAGE 13  7.69}
                {RESIST_DAMAGE 14  7.14}
                {RESIST_DAMAGE 15  6.67}
                {RESIST_DAMAGE 16  6.25}
                {RESIST_DAMAGE 17  5.88}
                {RESIST_DAMAGE 18  5.56}
                {RESIST_DAMAGE 19  5.26}
                {RESIST_DAMAGE 20  5.00}
                {RESIST_DAMAGE 21  4.76}
                {RESIST_DAMAGE 22  4.55}
                {RESIST_DAMAGE 23  4.35}
                {RESIST_DAMAGE 24  4.17}
                {RESIST_DAMAGE 25  4.00}
                {RESIST_DAMAGE 26  3.85}
                {RESIST_DAMAGE 27  3.70}
                {RESIST_DAMAGE 28  3.57}
                {RESIST_DAMAGE 29  3.45}
                {RESIST_DAMAGE 30  3.33}
                {RESIST_DAMAGE 31  3.23}
                {RESIST_DAMAGE 32  3.13}
                {RESIST_DAMAGE 33  3.03}
                {RESIST_DAMAGE 34  2.94}
                {RESIST_DAMAGE 35  2.86}
                {RESIST_DAMAGE 36  2.78}
                {RESIST_DAMAGE 37  2.70}
                {RESIST_DAMAGE 38  2.63}
                {RESIST_DAMAGE 39  2.56}
                {RESIST_DAMAGE 40  2.50}
                {RESIST_DAMAGE 41  2.44}
                {RESIST_DAMAGE 42  2.38}
                {RESIST_DAMAGE 43  2.33}
                {RESIST_DAMAGE 44  2.27}
                {RESIST_DAMAGE 45  2.22}
                {RESIST_DAMAGE 46  2.17}
                {RESIST_DAMAGE 47  2.13}
                {RESIST_DAMAGE 48  2.08}
                {RESIST_DAMAGE 49  2.04}
                {RESIST_DAMAGE 50  2.00}
                {RESIST_DAMAGE 51  1.96}
                {RESIST_DAMAGE 52  1.92}
                {RESIST_DAMAGE 53  1.89}
                {RESIST_DAMAGE 54  1.85}
                {RESIST_DAMAGE 55  1.82}
                {RESIST_DAMAGE 56  1.79}
                {RESIST_DAMAGE 57  1.75}
                {RESIST_DAMAGE 58  1.72}
                {RESIST_DAMAGE 59  1.69}
                {RESIST_DAMAGE 60  1.67}
                {RESIST_DAMAGE 61  1.64}
                {RESIST_DAMAGE 62  1.61}
                {RESIST_DAMAGE 63  1.59}
                {RESIST_DAMAGE 64  1.56}
                {RESIST_DAMAGE 65  1.54}
                {RESIST_DAMAGE 66  1.52}
                {RESIST_DAMAGE 67  1.49}
                {RESIST_DAMAGE 68  1.47}
                {RESIST_DAMAGE 69  1.45}
                {RESIST_DAMAGE 70  1.43}
                {RESIST_DAMAGE 71  1.41}
                {RESIST_DAMAGE 72  1.39}
                {RESIST_DAMAGE 73  1.37}
                {RESIST_DAMAGE 74  1.35}
                {RESIST_DAMAGE 75  1.33}
                {RESIST_DAMAGE 76  1.32}
                {RESIST_DAMAGE 77  1.30}
                {RESIST_DAMAGE 78  1.28}
                {RESIST_DAMAGE 79  1.27}
                {RESIST_DAMAGE 80  1.25}
                {RESIST_DAMAGE 81  1.23}
                {RESIST_DAMAGE 82  1.22}
                {RESIST_DAMAGE 83  1.20}
                {RESIST_DAMAGE 84  1.19}
                {RESIST_DAMAGE 85  1.18}
                {RESIST_DAMAGE 86  1.16}
                {RESIST_DAMAGE 87  1.15}
                {RESIST_DAMAGE 88  1.14}
                {RESIST_DAMAGE 89  1.12}
                {RESIST_DAMAGE 90  1.11}
                {RESIST_DAMAGE 91  1.10}
                {RESIST_DAMAGE 92  1.09}
                {RESIST_DAMAGE 93  1.08}
                {RESIST_DAMAGE 94  1.06}
                {RESIST_DAMAGE 95  1.05}
                {RESIST_DAMAGE 96  1.04}
                {RESIST_DAMAGE 97  1.03}
                {RESIST_DAMAGE 98  1.02}
                {RESIST_DAMAGE 99  1.01}
                {RESIST_DAMAGE 100-9999 1.00}
            [/abilities]
        [/effect]
    [/trait]
#enddef
