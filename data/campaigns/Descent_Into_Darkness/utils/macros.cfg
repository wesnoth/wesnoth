#textdomain wesnoth-did

# MODIFY_ONE_UNIT alters a unit variable for a single unit
#define MODIFY_ONE_UNIT FILTER WML
    [store_unit]
        [filter]
            {FILTER}
        [/filter]
        variable=MODIFY_UNIT_store
        kill=no
    [/store_unit]

    [modify_unit]
        [filter]
            id=$MODIFY_UNIT_store[0].id
        [/filter]
        {WML}
    [/modify_unit]

    {CLEAR_VARIABLE MODIFY_UNIT_store}
#enddef

# Create a new ghost-type "advisor" if Malin doesn't already have one
#define CREATE_ADVISOR
    [if]
        [have_unit]
            side=1
            role=advisor
            search_recall_list=yes
        [/have_unit]
        [then]
            # Recall an advisor if we have one to do so
            [recall]
                role=advisor
            [/recall]
        [/then]
        [elseif]
            # Else, make a new advisor from a ghost unit
            [have_unit]
                side=1
                type=Spectre,Nightgaunt,Wraith,Shadow,Ghost
                search_recall_list=yes
            [/have_unit]
            [then]
                [role]
                    role=advisor
                    side=1
                    type=Spectre,Nightgaunt,Wraith,Shadow,Ghost
                [/role]

                [recall]
                    role=advisor
                [/recall]
            [/then]
        [/elseif]
        [else]
            # If that fails too, make a brand new ghost advisor
            [unit]
                type=Ghost
                side=1
                role=advisor
                animate=yes
                placement=leader
            [/unit]
        [/else]
    [/if]
#enddef

#define MANOR_DOORS ALLOWED_SIDES
    # This places the doors; bridges placed on the map tell us where to put
    # them and whether to use the sw-se image or the sw-ne image. The prestart
    # event places the images and replaces the bridge overlays with the
    # impassable ^Xo overlay. The moveto event triggers when moving next to any
    # of these locations and will remove both the image and and the impassable
    # overlay.

    [event]
        name=prestart

        [store_locations]
            terrain=*^Bw\,*^Bw/
            variable=doors
        [/store_locations]

        {FOREACH doors i}
            [if]
                [have_location]
                    x,y=$doors[$i].x,$doors[$i].y
                    terrain=*^Bw\
                [/have_location]

                [then]
                    [item]
                        x,y=$doors[$i].x,$doors[$i].y
                        image=scenery/gate-rusty-sw.png
                    [/item]
                [/then]

                [else]
                    [item]
                        x,y=$doors[$i].x,$doors[$i].y
                        image=scenery/gate-rusty-se.png
                    [/item]
                [/else]
            [/if]

            [terrain]
                x,y=$doors[$i].x,$doors[$i].y
                terrain=^Xo
                layer=overlay
            [/terrain]
        {NEXT i}

        {CLEAR_VARIABLE doors}
    [/event]

    [event]
        name=moveto
        first_time_only=no

        [filter]
            side={ALLOWED_SIDES}

            [filter_location]
                [filter_adjacent_location]
                    terrain=*^Xo
                [/filter_adjacent_location]
            [/filter_location]
        [/filter]

        [store_locations]
            terrain=*^Xo

            [filter_adjacent_location]
                x,y=$x1,$y1
            [/filter_adjacent_location]

            variable=door_to_open
        [/store_locations]

        [set_variables]
            name=door_terrain_layers

            [split]
                list=$door_to_open.terrain
                key=terrain
                separator="^"
            [/split]
        [/set_variables]

        [terrain]
            x,y=$door_to_open.x,$door_to_open.y
            terrain=$door_terrain_layers[0].terrain
        [/terrain]

        [remove_item]
            x,y=$door_to_open.x,$door_to_open.y
        [/remove_item]

        [redraw]
            side=$unit.side
        [/redraw]

        {CLEAR_VARIABLE door_to_open,door_terrain_layers}
    [/event]
#enddef
