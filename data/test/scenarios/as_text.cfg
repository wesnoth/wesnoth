# Unit tests for wesnoth.as_text(...)

{GENERIC_UNIT_TEST "as_text" (
    [event]
        name = prestart

        [set_variables]
            name=var
            [value]
                [one]
                    [first]
                        a=1
                        b="5"
                        c=true
                    [/first]
                [/one]
                [two]
                    [second]
                        x=9
                        y="3"
                        z=false
                    [/second]
                [/two]
            [/value]
        [/set_variables]

        [lua]
            code = <<
                unit_test.assert_equal(wesnoth.as_text("a"), '"a"')
                unit_test.assert_equal(wesnoth.as_text(1), "1")
                unit_test.assert_equal(wesnoth.as_text(true), "true")
                unit_test.assert_equal(wesnoth.as_text({ "a", "b", "c" }), '{"1":"a","2":"b","3":"c"}')

                -- associative table iteration order not defined and can vary between runs even when the data remains identical
                local tab_txt = wesnoth.as_text({ a = 1, b = false, c = "d" })
                unit_test.assert_contains(tab_txt, '"a":1')
                unit_test.assert_contains(tab_txt, '"b":false')
                unit_test.assert_contains(tab_txt, '"c":"d"')

                local wml_tab_txt = wesnoth.as_text(wml.variables["var"])
                unit_test.assert_contains(wml_tab_txt, '{"1":{"1":"one","2":{"1":{"1":"first","2":{')
                unit_test.assert_contains(wml_tab_txt, '"a":1')
                unit_test.assert_contains(wml_tab_txt, '"b":5')
                unit_test.assert_contains(wml_tab_txt, '"c":true')
                unit_test.assert_contains(wml_tab_txt, ',"2":{"1":"two","2":{"1":{"1":"second","2":{')
                unit_test.assert_contains(wml_tab_txt, '"x":9')
                unit_test.assert_contains(wml_tab_txt, '"y":3')
                unit_test.assert_contains(wml_tab_txt, '"z":false')

                -- Pass the test. Doesn't do anything if any of the above assertions has failed.
                unit_test.succeed()
            >>
        [/lua]
    [/event]
)}
