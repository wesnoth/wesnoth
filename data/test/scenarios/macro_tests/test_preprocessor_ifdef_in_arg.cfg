# wmllint: no translatables

#####
# API(s) being tested: the preprocessor
##
# Expected end state:
# This test passes. None of the FAILs happen.
#####
{GENERIC_UNIT_TEST "test_preprocessor_ifdef_in_arg" (
    [event]
        name=start

        # Every {FAIL} block is removed during the preprocessing stage. Although the preprocessor
        # does try to expand them, its output contains only the expansion of the {SUCCEED}
        # statement, causing the test to pass. The preprocessor is aware of which blocks should be
        # enabled, which can be seen by using a nonexistent macro in all of the four blocks which
        # are disabled (no error), vs any of the blocks which should be enabled (it errors out).
        #
        # This is a test where the behavior is surprising, might be worth changing, but is being
        # tested so that we realise if it's changed. I assume it's caused by the handling of ifdef
        # statements inside macro arguments, as this is an argument to the GENERIC_UNIT_TEST macro.

#ifdef SOMETHING_THAT_IS_NOT_DEFINED
        {FAIL}
#else
        {FAIL}
#endif
#ifndef SOMETHING_THAT_IS_NOT_DEFINED
        {FAIL}
#else
        {FAIL}
#endif

        # Now try with something that is defined

#ifdef WESNOTH_VERSION
        {FAIL}
#else
        {FAIL}
#endif
#ifndef WESNOTH_VERSION
        {FAIL}
#else
        {FAIL}
#endif

        {SUCCEED}
    [/event]
)}
