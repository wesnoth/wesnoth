
# Test that an error message in Lua includes the value of the tag's name key
{GENERIC_UNIT_TEST test_lua_name (
    [lua]
        name=test
        code=<<
            -- Can't use assert_throws_with here because we want to test the preamble that's automatically prefixed to the error.
            local ret, err = pcall(function()
                local some_variable = bar
            end)
            unit_test.assert_contains(err, 'test', 'error contains name')
        >>
    [/lua]
    [event]
        name=start
        {SUCCEED}
    [/event]
)}
# Same as above but for Lua in events
{GENERIC_UNIT_TEST test_lua_event_name (
    [event]
        name=start
        [lua]
            name=test
            code=<<
                -- Can't use assert_throws_with here because we want to test the preamble that's automatically prefixed to the error.
                local ret, err = pcall(function()
                    local some_variable = bar
                end)
                unit_test.assert_contains(err, 'test', 'error contains name')
                unit_test.succeed()
            >>
        [/lua]
    [/event]
)}
