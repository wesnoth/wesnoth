#textdomain wesnoth-test

#####
# API(s) being tested: ability[filter_adjacent_student]
##
# Actions:
# place a unit alex adjacent to alice and only alice.
# place loki adjacent to alex and only alex
# Give alex an ability specialX who affect alice, which is only active in fight if one adjacent unit is loki.
# alice attack bob.
##
# Expected end state:
# attack event no trigered if specialX active because alice is no adjacent to loki, [filter_adjacent_student] filter the units adjacent to student, and not owner of ability.
#####
{GENERIC_UNIT_TEST "filter_adjacent_student_inactive" (
    [event]
        name=start

        [unit]
            id=alex
            name=_"Alex"
            x,y=12,4
            type=Elvish Hero
            side=1
        [/unit]
        [unit]
            id=loki
            name=_"Loki"
            x,y=11,4
            type=Elvish Hero
            side=1
        [/unit]
        # Make sure they don't die during the attacks
        [modify_unit]
            [filter]
            [/filter]
            [status]
                invulnerable=yes
            [/status]
        [/modify_unit]
        [object]
            silent=yes
            [effect]
                apply_to=new_ability
                [abilities]
                    [damage]
                        id=specialX
                        name=_ "specialX"
                        description=_ "specialX is active if and only if one of the adjacents units is bob"
                        value=1
                        apply_to=self
                        affect_self=no
                        affect_allies=yes
                        affect_enemies=yes
                        [affect_adjacent]
                            [filter]
                                id=alice
                            [/filter]
                        [/affect_adjacent]
                        [filter_adjacent_student]
                            id=loki
                        [/filter_adjacent_student]
                    [/damage]
                [/abilities]
            [/effect]
            [filter]
                id=alex
            [/filter]
        [/object]
        {VARIABLE triggers_on_attack 0}
    [/event]
    [event]
        name=side 1 turn 1
        [do_command]
            [move]
                x=7,13
                y=3,4
            [/move]
            [attack]
                [source]
                    x,y=13,4
                [/source]
                [destination]
                    x,y=13,3
                [/destination]
            [/attack]
        [/do_command]
        [end_turn][/end_turn]
    [/event]

    [event]
        name=side 2 turn
        [do_command]
            [attack]
                [source]
                    x,y=13,3
                [/source]
                [destination]
                    x,y=13,4
                [/destination]
            [/attack]
        [/do_command]
        [end_turn][/end_turn]
    [/event]
    # Event when Alice attacks
    [event]
        name=attack
        first_time_only=no
        [filter_attack]
            special_id_active=specialX
        [/filter_attack]
        {ASSERT ({VARIABLE_CONDITIONAL side_number equals 1})}
        {VARIABLE_OP triggers_on_attack add 1}
    [/event]

    [event]
        name=turn 2
        {ASSERT ({VARIABLE_CONDITIONAL triggers_on_attack equals 0})}
        {SUCCEED}
    [/event]
)}
