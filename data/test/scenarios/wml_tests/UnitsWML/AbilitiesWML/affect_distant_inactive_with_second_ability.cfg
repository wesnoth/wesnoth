#textdomain wesnoth-test
#define TEST_AFFECT_DISTANT_INACTIVE_WITH_SECOND_ABILITY FILTER
    [event]
        name=start
        [unit]
            id=alex
            name=_"Alex"
            x,y=1,1
            type=Elvish Hero
            side=1
        [/unit]
        [unit]
            id=bobby
            name=_"Bobby"
            x,y=1,5
            type=Elvish Hero
            side=1
        [/unit]
        [unit]
            id=carlos
            name=_"Carlos"
            x,y=1,12
            type=Elvish Hero
            side=1
        [/unit]

        [object]
            silent=yes
            [effect]
                apply_to=new_ability
                [abilities]
                    [leadership]
                        id=specialY
                        name=_ "specialY"
                        description=_ "specialY affect units within radius of 5"
                        value=25
                        affect_self=no
                        affect_allies=yes
                        affect_enemies=yes
                        [affect_adjacent]
                            radius=5
                        [/affect_adjacent]
                    [/leadership]
                [/abilities]
            [/effect]
            [filter]
                id=carlos
            [/filter]
        [/object]
        [object]
            silent=yes
            [effect]
                apply_to=new_ability
                [abilities]
                    [damage]
                        id=specialX
                        name=_ "specialX"
                        description=_ "specialX is active if it's within the radius and matches the filter."
                        value=100
                        apply_to=self
                        affect_self=no
                        affect_allies=yes
                        affect_enemies=yes
                        [filter]
                            {FILTER}
                        [/filter]
                        [affect_adjacent]
                            radius=5
                        [/affect_adjacent]
                    [/damage]
                [/abilities]
            [/effect]
            [filter]
                id=bobby
            [/filter]
        [/object]

        {ASSERT (
            [not]
                [have_unit]
                    id=alex
                    ability_id_active=specialX
                [/have_unit]
            [/not]
        )}

        {SUCCEED}
    [/event]
#enddef

#####
# API(s) being tested: ability[affect_adjacent]radius=
##
# Actions:
# Give carlos a leadership ability, specialY, that affects all units in a 5 hex radius
# Give bobby a damage ability, specialX, that affects all units in a 5 hex radius when affected by carlos' ability
# Place alex within range of bobby's ability but out of range of carlos' ability
# Place bobby out of range of carlos' ability
# Test whether the ability is active.
##
# Expected end state:
# specialX shouln'd be affect alex because inactive.
#####
{SEPARATE_KEEP_A_B_C_D_UNIT_TEST "affect_distant_inactive_with_second_ability_type" (
    {TEST_AFFECT_DISTANT_INACTIVE_WITH_SECOND_ABILITY (ability_type_active=leadership)}
)}

#####
# API(s) being tested: ability[affect_adjacent]radius=
##
# Actions:
# Give carlos a leadership ability, specialY, that affects all units in a 5 hex radius
# Give bobby a damage ability, specialX, that affects all units in a 5 hex radius when affected by carlos' ability
# Place alex within range of bobby's ability but out of range of carlos' ability
# Place bobby out of range of carlos' ability
# Test whether the ability is active.
##
# Expected end state:
# specialX shouln'd be affect alex because inactive.
#####
{SEPARATE_KEEP_A_B_C_D_UNIT_TEST "affect_distant_inactive_with_second_ability" (
    {TEST_AFFECT_DISTANT_INACTIVE_WITH_SECOND_ABILITY (ability_id_active=specialY)}
)}

#undef TEST_AFFECT_DISTANT_INACTIVE_WITH_SECOND_ABILITY
