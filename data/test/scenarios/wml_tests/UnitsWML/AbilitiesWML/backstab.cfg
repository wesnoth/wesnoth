# wmllint: no translatables

#####
# API(s) being tested: [damage][filter_opponent]formula=
##
# Actions:
# Bob is made to have 0% defense and given 100 hp.
# A Rogue is spawned north and south of Bob.
# A Rogue attacks Bob.
##
# Expected end state:
# The damage shows that Bob was backstabbed.
# Bob gets hit all three times and ends with 100-(6 * 3 * 2) hp.
#####
{GENERIC_BACKSTAB_TEST "backstab_active_with_accomplice_behind_bob" "n,s" yes ()}

#####
# API(s) being tested: [damage][filter_opponent]formula=
##
# Actions:
# Bob is made to have 0% defense and given 100 hp.
# A Rogue is spawned south, northwest and northeast of Bob.
# A Rogue attacks Bob.
##
# Expected end state:
# The damage shows that the ability was inactive.
# Bob gets hit all three times and ends with 100-(6 * 3 * 1) hp.
#####
{GENERIC_BACKSTAB_TEST "backstab_inactive_with_triangular_formation" "n,se,sw" no ()}

#####
# API(s) being tested: [damage][filter_opponent]formula=
##
# Actions:
# Bob is made to have 0% defense and given 100 hp.
# A Rogue is spawned north, south of Bob.
# The south Rogue is petrified.
# The non-petrified Rogue attacks Bob.
##
# Expected end state:
# The damage shows that the ability was inactive.
# Bob gets hit all three times and ends with 100-(6 * 3 * 1) hp.
#####
{GENERIC_BACKSTAB_TEST "backstab_inactive_with_statue_behind_bob" "n,s" no (
    [petrify]
        x=$spawn_points[1].x
        y=$spawn_points[1].y
    [/petrify]
)}

#####
# API(s) being tested: [damage][filter_opponent]formula=
##
# Actions:
# Bob is made to have 0% defense and given 100 hp.
# A Rogue is spawned north, south of Bob.
# The south Rogue is allied with Bob.
# The enemy Rogue attacks Bob.
##
# Expected end state:
# The damage shows that the ability was inactive.
# Bob gets hit all three times and ends with 100-(6 * 3 * 1) hp.
#####
{GENERIC_BACKSTAB_TEST "backstab_inactive_with_bobs_ally_behind_bob" "n,s" no (
    [modify_unit]
        [filter]
            x=$spawn_points[1].x
            y=$spawn_points[1].y
        [/filter]
        side=2
    [/modify_unit]
)}

#####
# API(s) being tested: WEAPON_SPECIAL_BACKSTAB
##
# Actions:
# Bob is made to have 0% defense and given 100 hp.
# A Rogue is spawned north, south of Bob.
# The south Rogue is an enemy of both Bob and of the attacker.
# The north Rogue attacks Bob.
##
# Expected end state:
# The damage shows that Bob was backstabbed.
# Bob gets hit all three times and ends with 100-(6 * 3 * 2) hp.
#####
{GENERIC_BACKSTAB_TEST "backstab_active_with_free_for_all" "n,s" yes (
    # Although the core weapon special is implemented using WFL,
    # the logic is also hardcoded into the via in attack.cpp's
    # function backstab_check(). This test is a reminder to change
    # the C++ if someone changes the WFL.
    [modify_unit]
        [filter]
            x=$spawn_points[1].x
            y=$spawn_points[1].y
        [/filter]
        side=3
    [/modify_unit]
)}
