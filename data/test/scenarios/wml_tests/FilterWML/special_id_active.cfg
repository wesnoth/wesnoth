# This unit test reproduces setup of weapon special such as https://github.com/inferno8/wesnoth-Era_of_Magic/blob/adf227cba2e66602c4bb49dc203fa751865aa124/utils/beam.cfg, which is not supposed to work in rpg.
# Focus of this test is whether [filter_attack]special_id_active work for [filter_self]lua_function controlled conditional weapon special

{GENERIC_UNIT_TEST "special_id_active_lua_function" (
    [event]
        name=preload
        first_time_only=no
        [lua]
            code=<<
conditional_special_active = function()
	return wml.variables.conditional_special_active
end
>>
        [/lua]
    [/event]
    [event]
        name=attacker_hits,attacker_misses
        first_time_only=no

        [filter_attack]
            special_id_active=conditional_special
        [/filter_attack]
        {VARIABLE_OP events_trigger_result add 1}
    [/event]
    [event]
        name=run_test_case
        first_time_only=no
        [modify_unit]
            [filter]
            [/filter]
            max_hitpoints=100
            hitpoints=100
            attacks_left=1
        [/modify_unit]
        [store_unit]
            [filter]
                id=alice
            [/filter]
            variable=a
            kill=yes
        [/store_unit]
        [store_unit]
            [filter]
                id=bob
            [/filter]
            variable=b
        [/store_unit]
        [unstore_unit]
            variable=a
            find_vacant=yes
            x,y=$b.x,$b.y
        [/unstore_unit]
        [store_unit]
            [filter]
                id=alice
            [/filter]
            variable=a
        [/store_unit]

        [do_command]
            [attack]
                weapon=0
                defender_weapon=0
                [source]
                    x,y=$a.x,$a.y
                [/source]
                [destination]
                    x,y=$b.x,$b.y
                [/destination]
            [/attack]
        [/do_command]
    [/event]
    [event]
        name=start
        [object]
            silent=yes
            [effect]
                apply_to=attack
                [set_specials]
                    mode=append
                    [damage]
                        id=conditional_special
                        name=conditional_special
                        [filter_self]
                            lua_function=conditional_special_active
                        [/filter_self]
                        add=5
                    [/damage]
                [/set_specials]
            [/effect]
            [filter]
                id=alice
            [/filter]
        [/object]

        {VARIABLE conditional_special_active yes}
        {VARIABLE events_trigger_result 0}
        [fire_event]
            name=run_test_case
        [/fire_event]
        {ASSERT ({VARIABLE_CONDITIONAL events_trigger_result equals 2})}

        {VARIABLE conditional_special_active no}
        {VARIABLE events_trigger_result 0}
        [fire_event]
            name=run_test_case
        [/fire_event]
        {ASSERT ({VARIABLE_CONDITIONAL events_trigger_result equals 0})}

        {SUCCEED}
    [/event]
)}
