# wmllint: no translatables

#define TERRAIN_MASK_TEST SUFFIX MASK
#arg POS
0,0#endarg
#arg ALIGNMENT
raw#endarg
#arg PRE_MASK
#endarg
#arg POST_MASK
#endarg
#arg RULES
#endarg
#arg MASK_TYPE
mask#endarg
    {GENERIC_UNIT_TEST test_terrain_mask_{SUFFIX} (
        [event]
            name=start
            {PRE_MASK}
            [terrain_mask]
                x,y={POS}
                alignment={ALIGNMENT}
                {MASK_TYPE}={MASK}
                {RULES}
            [/terrain_mask]
            {POST_MASK}
            {SUCCEED}
        [/event]
    )}
#enddef

#define ASSERT_LOCATION_TERRAIN X Y TERRAIN
    {ASSERT (
        [have_location]
            x={X}
            y={Y}
            terrain={TERRAIN}
            include_borders=yes
        [/have_location]
    )}
#enddef

#define ASSERT_LOCATION_NAME X Y NAME
    {ASSERT (
        [have_location]
            x={X}
            y={Y}
            location_id={NAME}
        [/have_location]
    )}
#enddef

#define ASSERT_LOCATION_TERRAIN_SQUARE_2X2 X1 Y1 X2 Y2 X3 Y3 X4 Y4 TERRAIN
    {ASSERT_LOCATION_TERRAIN {X1} {Y1} {TERRAIN}}
    {ASSERT_LOCATION_TERRAIN {X2} {Y2} {TERRAIN}}
    {ASSERT_LOCATION_TERRAIN {X3} {Y3} {TERRAIN}}
    {ASSERT_LOCATION_TERRAIN {X4} {Y4} {TERRAIN}}
#enddef

#define TERRAIN_RULE_LAYER LAYER
    [rule]
        layer={LAYER}
    [/rule]
#enddef

#define TERRAIN_RULE_SIMPLE OLD NEW REPLACE
    [rule]
        old={OLD}
        new={NEW}
        terrain={REPLACE}
    [/rule]
#enddef

#define HILLS_SQUARE
    "Hh, Hh
Hh, Hh"#enddef

#####
# API(s) being tested: [terrain_mask]
##
# Actions:
# Apply a terrain mask of _f to a hex.
##
# Expected end state:
# The terrain doesn't change.
#####
{TERRAIN_MASK_TEST simple_nop "_f" (POS=9,1) (PRE_MASK={ASSERT_LOCATION_TERRAIN 9 1 Gg^Kov}) (POST_MASK={ASSERT_LOCATION_TERRAIN 9 1 Gg^Kov})}
#####
# API(s) being tested: [terrain_mask]
##
# Actions:
# Apply a terrain mask of Gd to a hex.
##
# Expected end state:
# The terrain on that location changes to Gd.
#####
{TERRAIN_MASK_TEST simple_set "Gd" (POS=9,1) (PRE_MASK={ASSERT_LOCATION_TERRAIN 9 1 Gg^Kov}) (POST_MASK={ASSERT_LOCATION_TERRAIN 9 1 Gd})}
#####
# API(s) being tested: [terrain_mask]
##
# Actions:
# Apply a terrain mask of Gd^Vo to a hex.
# Use a rule for only the base terrain.
##
# Expected end state:
# The base terrain of the hex is changed, but the overlay is not.
#####
{TERRAIN_MASK_TEST simple_underlay "Gd^Vo" (POS=9,1) (PRE_MASK={ASSERT_LOCATION_TERRAIN 9 1 Gg^Kov}) (POST_MASK={ASSERT_LOCATION_TERRAIN 9 1 Gd^Kov}) (RULES={TERRAIN_RULE_LAYER base})}
#####
# API(s) being tested: [terrain_mask]
##
# Actions:
# Apply a terrain mask of Gd^Vo to a hex that already has a base terrain of Gd.
# Use a rule for only the base terrain.
##
# Expected end state:
# The terrain of the hex is not changed.
#####
{TERRAIN_MASK_TEST simple_overlay "Gd^Vo" (POS=9,1) (PRE_MASK={ASSERT_LOCATION_TERRAIN 9 1 Gg^Kov}) (POST_MASK={ASSERT_LOCATION_TERRAIN 9 1 Gg^Vo}) (RULES={TERRAIN_RULE_LAYER overlay})}

# Location IDs from the mask are added to the map, unless this is explicitly disabled
#####
# API(s) being tested: [terrain_mask]
##
# Actions:
# Add a location id to a hex.
##
# Expected end state:
# The hex has the location id associated to it.
#####
{TERRAIN_MASK_TEST simple_name "foo Gg" (POS=9,1) (POST_MASK={ASSERT_LOCATION_NAME 9 1 foo}) (PRE_MASK=
{ASSERT (
    [not]
        [have_location]
            x,y=9,1
            location_id=foo
        [/have_location]
    [/not]
)}
)}
#####
# API(s) being tested: [terrain_mask]ignore_special_locations=
##
# Actions:
# Apply a mask that would add a location id to a hex, but use the option to ignore the id.
##
# Expected end state:
# The hex is not found by location id since locations are not set by the terrain mask.
#####
{TERRAIN_MASK_TEST simple_name_ignore "foo Gg" (POS=9,1) (POST_MASK=
[+terrain_mask]
    ignore_special_locations=yes
[/terrain_mask]
{ASSERT (
    [not]
        [have_location]
            x,y=9,1
            location_id=foo
        [/have_location]
    [/not]
)}
)}

# Alignment works
#####
# API(s) being tested: [terrain_mask]
##
# Actions:
# Change 4 hexes to the Hh terrain. The x coordinate is odd and the alignment is odd.
##
# Expected end state:
# The terrain is changed on the expected hexes.
#####
{TERRAIN_MASK_TEST align_odd_on_odd {HILLS_SQUARE} (POS=9,1) (ALIGNMENT=odd) (POST_MASK={ASSERT_LOCATION_TERRAIN_SQUARE_2X2 9 1 9 2 10 1 10 2 Hh})}
#####
# API(s) being tested: [terrain_mask]
##
# Actions:
# Change 4 hexes to the Hh terrain. The x coordinate is even and the alignment is odd.
##
# Expected end state:
# The terrain is changed on the expected hexes.
#####
{TERRAIN_MASK_TEST align_odd_on_even {HILLS_SQUARE} (POS=10,1) (ALIGNMENT=odd) (POST_MASK={ASSERT_LOCATION_TERRAIN_SQUARE_2X2 10 1 10 2 11 2 11 3 Hh})}
#####
# API(s) being tested: [terrain_mask]
##
# Actions:
# Change 4 hexes to the Hh terrain. The x coordinate is odd and the alignment is even.
##
# Expected end state:
# The terrain is changed on the expected hexes.
#####
{TERRAIN_MASK_TEST align_even_on_odd {HILLS_SQUARE} (POS=9,1) (ALIGNMENT=even) (POST_MASK={ASSERT_LOCATION_TERRAIN_SQUARE_2X2 10 0 10 1 9 1 9 2 Hh})}
#####
# API(s) being tested: [terrain_mask]
##
# Actions:
# Change 4 hexes to the Hh terrain. The x coordinate is even and the alignment is even.
##
# Expected end state:
# The terrain is changed on the expected hexes.
#####
{TERRAIN_MASK_TEST align_even_on_even {HILLS_SQUARE} (POS=10,1) (ALIGNMENT=even) (POST_MASK={ASSERT_LOCATION_TERRAIN_SQUARE_2X2 10 1 10 2 11 1 11 2 Hh})}
#####
# API(s) being tested: [terrain_mask]
##
# Actions:
# Change 4 hexes to the Hh terrain. The x coordinate is odd and the alignment is raw.
##
# Expected end state:
# The terrain is changed on the expected hexes.
#####
{TERRAIN_MASK_TEST align_raw_on_odd {HILLS_SQUARE} (POS=9,1) (ALIGNMENT=raw) (POST_MASK={ASSERT_LOCATION_TERRAIN_SQUARE_2X2 9 1 9 2 10 1 10 2 Hh})}
#####
# API(s) being tested: [terrain_mask]
##
# Actions:
# Change 4 hexes to the Hh terrain. The x coordinate is even and the alignment is raw.
##
# Expected end state:
# The terrain is changed on the expected hexes.
#####
{TERRAIN_MASK_TEST align_raw_on_even {HILLS_SQUARE} (POS=10,1) (ALIGNMENT=raw) (POST_MASK={ASSERT_LOCATION_TERRAIN_SQUARE_2X2 10 1 10 2 11 1 11 2 Hh})}

# The deprecated alignment modes work
#ifndef SCHEMA_VALIDATION
#####
# API(s) being tested: [terrain_mask]border=,[terrain_mask]alignment=
##
# Actions:
# Use the deprecated border= attribute when setting a set of 4 hexes to the Hh terrain.
##
# Expected end state:
# The terrain is changed on the expected hexes.
#####
{TERRAIN_MASK_TEST deprecated_border_no {HILLS_SQUARE} (POS=1,1) (POST_MASK=
[+terrain_mask]
    border=no
    alignment=
[/terrain_mask]
{ASSERT_LOCATION_TERRAIN_SQUARE_2X2 1 1 1 2 2 1 2 2 Hh}
)}
#####
# API(s) being tested: [terrain_mask]border=,[terrain_mask]alignment=
##
# Actions:
# Use the deprecated border= attribute when setting a set of 4 hexes to the Hh terrain.
##
# Expected end state:
# The terrain is changed on the expected hexes.
#####
{TERRAIN_MASK_TEST deprecated_border_yes {HILLS_SQUARE} (POS=1,1) (POST_MASK=
[+terrain_mask]
    border=yes
    alignment=
[/terrain_mask]
{ASSERT_LOCATION_TERRAIN_SQUARE_2X2 0 0 0 1 1 0 1 1 Hh}
)}
#endif

# Terrain rules work
#####
# API(s) being tested: [terrain_mask][rule]
##
# Actions:
# Use a terrain mask rule to change existing terrain to either Ko or Co.
##
# Expected end state:
# The expected terrain is changed.
#####
{TERRAIN_MASK_TEST rule_basic {HILLS_SQUARE} (POS=7,3) (RULES={TERRAIN_RULE_SIMPLE Kha^Kov Hh Ko}{TERRAIN_RULE_SIMPLE Cha^Kov Hh Co}) (POST_MASK=
{ASSERT_LOCATION_TERRAIN 7 3 Ko}
{ASSERT_LOCATION_TERRAIN 7 4 Co}
{ASSERT_LOCATION_TERRAIN 8 3 Hh}
{ASSERT_LOCATION_TERRAIN 8 4 Hh}
)}

# mask_file= works (this is the same as the above test in all other respects)
#####
# API(s) being tested: [terrain_mask][rule]
##
# Actions:
# Use a terrain mask rule to change terrain to either Ko or Co based on the existing terrain and the Hh terrain in the mask file.
##
# Expected end state:
# The expected terrain is changed.
#####
{TERRAIN_MASK_TEST file "test_hills_square.mask" (POS=7,3) (RULES={TERRAIN_RULE_SIMPLE Kha^Kov Hh Ko}{TERRAIN_RULE_SIMPLE Cha^Kov Hh Co}) (POST_MASK=
{ASSERT_LOCATION_TERRAIN 7 3 Ko}
{ASSERT_LOCATION_TERRAIN 7 4 Co}
{ASSERT_LOCATION_TERRAIN 8 3 Hh}
{ASSERT_LOCATION_TERRAIN 8 4 Hh}
) (MASK_TYPE=mask_file)}

# TODO: Add more terrain rule tests?

#undef TERRAIN_MASK_TEST
#undef ASSERT_LOCATION_TERRAIN
#undef ASSERT_LOCATION_NAME
#undef ASSERT_LOCATION_TERRAIN_SQUARE_2X2
#undef TERRAIN_RULE_LAYER
#undef TERRAIN_RULE_SIMPLE
#undef HILLS_SQUARE
