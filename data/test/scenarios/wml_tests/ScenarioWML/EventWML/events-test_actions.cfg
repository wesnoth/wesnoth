
#####
# API(s) being tested: N/A
##
# Actions:
# Succeed in a start event.
##
# Expected end state:
# The test passes when the start event is triggered.
#####
{GENERIC_UNIT_TEST "event_test_action_wml" (
    [event]
        name=start
        {SUCCEED}
    [/event]
)}

#####
# API(s) being tested: wesnoth.game_events.add_repeating
##
# Actions:
# Use lua to add a repeating (aka first_time_only=no) "new turn" event.
##
# Expected end state:
# The test passes when the new turn event is triggered.
# This does not test that the event occurs multiple times.
#####
{GENERIC_UNIT_TEST "event_test_lua" (
    [event]
        name=preload
        [lua]
            code=<<
                wesnoth.game_events.add_repeating('new turn', function()
                    unit_test.succeed()
                end)
            >>
        [/lua]
    [/event]
)}

#####
# API(s) being tested: wesnoth.game_events.add
##
# Actions:
# Use lua to add a non-repeating (aka first_time_only=yes) "new turn" event.
##
# Expected end state:
# The test passes when the new turn event is triggered.
# This does not test that the event occurs only once.
#####
{GENERIC_UNIT_TEST "event_test_lua_advanced" (
    [event]
        name=preload
        [lua]
            code=<<
                wesnoth.game_events.add{
                    name = 'new turn',
                    action = function()
                        unit_test.succeed()
                    end
                }
            >>
        [/lua]
    [/event]
)}

#####
# API(s) being tested: wesnoth.game_events.add{first_time_only
##
# Actions:
# Use lua to add an event with first_time_only=true.
# Use lua to add an event with first_time_only=false.
##
# Expected end state:
# The event with first_time_only=true is triggered once.
# The event with first_time_only=false is triggered twice.
#####
{GENERIC_UNIT_TEST "event_test_lua_repeat" (
    [event]
        name=preload
        [lua]
            code=<<
                wml.variables.only_once = 0
                wml.variables.should_repeat = 0
                wesnoth.game_events.add{
                    name = 'new turn',
                    first_time_only = true,
                    action = function()
                        wml.variables.only_once = wml.variables.only_once + 1
                    end
                }
                wesnoth.game_events.add{
                    name = 'new turn',
                    first_time_only = false,
                    action = function()
                        wml.variables.should_repeat = wml.variables.should_repeat + 1
                    end
                }
            >>
        [/lua]
    [/event]
    [event]
        name=side 1 turn 1
        [end_turn][/end_turn]
    [/event]
    [event]
        name=side 2 turn 1
        [end_turn][/end_turn]
    [/event]
    [event]
        name=side 1 turn 2
        [end_turn][/end_turn]
    [/event]
    [event]
        name=side 2 turn 2
        {ASSERT ({VARIABLE_CONDITIONAL only_once equals 1})}
        {ASSERT ({VARIABLE_CONDITIONAL should_repeat equals 2})}
        {SUCCEED}
    [/event]
)}

#####
# API(s) being tested: N/A
##
# Actions:
# Use lua to add an event that will break replays and save games using the 'action' attribute.
##
# Expected end state:
# A warning is logged stating that this will break save games.
#####
{GENERIC_UNIT_TEST "event_test_lua_break_save" (
    [event]
        name=start
        [lua]
            code=<<
                wesnoth.game_events.add{
                    name = 'new turn',
                    action = function() end
                }
                unit_test.succeed()
            >>
        [/lua]
    [/event]
)}
