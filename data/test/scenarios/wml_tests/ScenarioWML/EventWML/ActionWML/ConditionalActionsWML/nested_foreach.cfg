# wmllint: no translatables

#####
# API(s) being tested: [foreach],[foreach]array=this_item
#
# The [foreach] loop implements local-scoping for the variables this_item and i.
# This tests the behavior when looping over an array that is itself called this_item.
##
# Actions:
# Simulate storing a unit with heals+4 to a variable.
# Boost the strength of the healing ability.
##
# Expected end state:
# The unit's healing ability is heals+8.
#####
{GENERIC_UNIT_TEST foreach_mutate_nested (
    [event]
        name=start

        # A small subset of the result of storing a unit to a variable
        {VARIABLE u.abilities[0].regenerate.value 4}
        {VARIABLE u.abilities[1].heals.value 4}

        # This makes the length of the inner this_item different to that of
        # the outer this_item, to test that the sanity check for external
        # modification isn't triggered by the matching names.
        {VARIABLE u.abilities[1].heals.test_attribute 4}

        [foreach]
            array=u.abilities
            [do]
                [foreach]
                    array=this_item.heals
                    [do]
                        [set_variable]
                            name=this_item.value
                            value=8
                        [/set_variable]
                    [/do]
                [/foreach]
            [/do]
        [/foreach]

        {ASSERT ({VARIABLE_CONDITIONAL u.abilities[0].regenerate.value equals 4})}
        {ASSERT ({VARIABLE_CONDITIONAL u.abilities[1].heals.value equals 8})}

        {SUCCEED}
    [/event]
)}
