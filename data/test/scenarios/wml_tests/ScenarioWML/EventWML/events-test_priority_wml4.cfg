#####
# API(s) being tested: [event]priority=
##
# Actions:
# Use event handlers to append alphabet letters to X.
# Each event handler increases Y by 1.
# Each event handler checks the current value of X, Y vs expectation.
##
# Expected end state:
# The test passes when X is `abcdefghijklmnopq` and Y is 17.
#####
{GENERIC_UNIT_TEST "events_test_multi_float" (
    [event]
        name = prestart
        {VARIABLE X "a"}
        {VARIABLE Y 1}
        [event]
            id = final-check
            name = start
            priority = -999999
            {ASSERT ({VARIABLE_CONDITIONAL Y equals 17})}
            {RETURN ({VARIABLE_CONDITIONAL X equals abcdefghijklmnopq})}
        [/event]
        [event]
            id = step-3
            name = start
            priority = 4.1
            {ASSERT ({VARIABLE_CONDITIONAL Y equals 3})}
            {ASSERT ({VARIABLE_CONDITIONAL X equals abc})}
            {VARIABLE_OP X formula "'$X'..'d'"}
            {VARIABLE_OP Y add 1}
        [/event]
        [event]
            id = step-5
            name = start
            priority = 3.99999
            {ASSERT ({VARIABLE_CONDITIONAL Y equals 5})}
            {ASSERT ({VARIABLE_CONDITIONAL X equals abcde})}
            {VARIABLE_OP X formula "'$X'..'f'"}
            {VARIABLE_OP Y add 1}
        [/event]
        [event]
            id = step-2
            name = start
            priority = 4.2
            {ASSERT ({VARIABLE_CONDITIONAL Y equals 2})}
            {ASSERT ({VARIABLE_CONDITIONAL X equals ab})}
            {VARIABLE_OP X formula "'$X'..'c'"}
            {VARIABLE_OP Y add 1}
        [/event]
        [event]
            id = step-1
            name = start
            priority = 5
            {ASSERT ({VARIABLE_CONDITIONAL Y equals 1})}
            {ASSERT ({VARIABLE_CONDITIONAL X equals a})}
            {VARIABLE_OP X formula "'$X'..'b'"}
            {VARIABLE_OP Y add 1}
        [/event]
        [event]
            id = step-4
            name = start
            priority = "$(4.0)"
            delayed_variable_substitution=no
            {ASSERT ({VARIABLE_CONDITIONAL Y equals 4})}
            {ASSERT ({VARIABLE_CONDITIONAL X equals abcd})}
            {VARIABLE_OP X formula "'$|X'..'e'"}
            {VARIABLE_OP Y add 1}
        [/event]
        [event]
            id = step-8
            name = start
            priority = 1
            {ASSERT ({VARIABLE_CONDITIONAL Y equals 8})}
            {ASSERT ({VARIABLE_CONDITIONAL X equals abcdefgh})}
            {VARIABLE_OP X formula "'$X'..'i'"}
            {VARIABLE_OP Y add 1}
        [/event]
        [event]
            id = step-6
            name = start
            priority = 1.5
            {ASSERT ({VARIABLE_CONDITIONAL Y equals 6})}
            {ASSERT ({VARIABLE_CONDITIONAL X equals abcdef})}
            {VARIABLE_OP X formula "'$X'..'g'"}
            {VARIABLE_OP Y add 1}
        [/event]
        [event]
            id = step-9
            name = start
            # Default to 0
            priority = "$X"
            {ASSERT ({VARIABLE_CONDITIONAL Y equals 9})}
            {ASSERT ({VARIABLE_CONDITIONAL X equals abcdefghi})}
            {VARIABLE_OP X formula "'$X'..'j'"}
            {VARIABLE_OP Y add 1}
        [/event]
        [event]
            id = step-10
            name = start
            priority = -2
            {ASSERT ({VARIABLE_CONDITIONAL Y equals 10})}
            {ASSERT ({VARIABLE_CONDITIONAL X equals abcdefghij})}
            {VARIABLE_OP X formula "'$X'..'k'"}
            {VARIABLE_OP Y add 1}
        [/event]
        [event]
            id = step-7
            name = start
            priority = 1.5
            {ASSERT ({VARIABLE_CONDITIONAL Y equals 7})}
            {ASSERT ({VARIABLE_CONDITIONAL X equals abcdefg})}
            {VARIABLE_OP X formula "'$X'..'h'"}
            {VARIABLE_OP Y add 1}
        [/event]
        [event]
            id = step-11
            name = start
            priority = -3.5
            {ASSERT ({VARIABLE_CONDITIONAL Y equals 11})}
            {ASSERT ({VARIABLE_CONDITIONAL X equals abcdefghijk})}
            {VARIABLE_OP X formula "'$X'..'l'"}
            {VARIABLE_OP Y add 1}
        [/event]
        [event]
            id = step-12
            name = start
            priority = -3.6
            {ASSERT ({VARIABLE_CONDITIONAL Y equals 12})}
            {ASSERT ({VARIABLE_CONDITIONAL X equals abcdefghijkl})}
            {VARIABLE_OP X formula "'$X'..'m'"}
            {VARIABLE_OP Y add 1}
        [/event]
        [event]
            id = step-14
            name = start
            priority = -2000
            {ASSERT ({VARIABLE_CONDITIONAL Y equals 14})}
            {ASSERT ({VARIABLE_CONDITIONAL X equals abcdefghijklmn})}
            {VARIABLE_OP X formula "'$X'..'o'"}
            {VARIABLE_OP Y add 1}
        [/event]
        [event]
            id = step-16
            name = start
            priority = -800000
            {ASSERT ({VARIABLE_CONDITIONAL Y equals 16})}
            {ASSERT ({VARIABLE_CONDITIONAL X equals abcdefghijklmnop})}
            {VARIABLE_OP X formula "'$X'..'q'"}
            {VARIABLE_OP Y add 1}
        [/event]
        [event]
            id = step-13
            name = start
            priority = -1000
            {ASSERT ({VARIABLE_CONDITIONAL Y equals 13})}
            {ASSERT ({VARIABLE_CONDITIONAL X equals abcdefghijklm})}
            {VARIABLE_OP X formula "'$X'..'n'"}
            {VARIABLE_OP Y add 1}
        [/event]
        [event]
            id = step-15
            name = start
            priority = -40000
            {ASSERT ({VARIABLE_CONDITIONAL Y equals 15})}
            {ASSERT ({VARIABLE_CONDITIONAL X equals abcdefghijklmno})}
            {VARIABLE_OP X formula "'$X'..'p'"}
            {VARIABLE_OP Y add 1}
        [/event]
    [/event]
)}
