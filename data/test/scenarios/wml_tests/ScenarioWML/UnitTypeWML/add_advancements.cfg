#####
# API(s) being tested: [modify_unit_type][add_advancement]
##
# Actions:
# Create an Advancing Unit unit type with an Advanced Unit advancement.
# Modify the Advancing Unit by adding the Advanced Unit advancement.
# Store Advancing Unit unit type.
##
# Expected end state:
# The Advancing Unit unit type should only have one advancement.
#####
{GENERIC_UNIT_TEST "no_duplicate_advancements" (
    [modify_unit_type]
        type="Horseman"
        add_advancement="Lancer"
    [/modify_unit_type]
    [event]
        name=start
        [unit]
            x = -10
            y = -10
            type = Horseman
            side = 1
            id = charlie
            canrecruit = no
        [/unit]
        [store_unit]
            variable=horseman
            [filter]
                id = charlie
            [/filter]
        [/store_unit]
        {ASSERT ({VARIABLE_CONDITIONAL horseman.advances_to equals "Knight,Lancer"})}

        {SUCCEED}
    [/event]
)}

{GENERIC_UNIT_TEST "add_advancement" (
    [modify_unit_type]
        type="Horseman"
        add_advancement="Cavalier"
    [/modify_unit_type]
    [event]
        name=start
        [unit]
            x = -10
            y = -10
            type = Horseman
            side = 1
            id = charlie
            canrecruit = no
        [/unit]
        [store_unit]
            variable=horseman
            [filter]
                id = charlie
            [/filter]
        [/store_unit]
        {ASSERT ({VARIABLE_CONDITIONAL horseman.advances_to equals "Knight,Lancer,Cavalier"})}

        {SUCCEED}
    [/event]
)}
