# Tests that return true works.
# This is a sanity check of the unit testing mechanism.
{GENERIC_UNIT_TEST "test_return" (
    [event]
        name = start
        {RETURN ([true][/true])}
    [/event]
)}

# Tests that return false fails.
# This is a sanity check of the unit testing mechanism.
{GENERIC_UNIT_TEST "test_return_fail" (
    [event]
        name = start
        {RETURN ([not][true][/true][/not])}
    [/event]
)}

# Same as the above two, but using the Lua unit_test module
{GENERIC_UNIT_TEST "test_lua_return" (
    [event]
        name = start
        [lua]
            code=<<unit_test.succeed()>>
        [/lua]
    [/event]
)}
{GENERIC_UNIT_TEST "test_lua_return_fail" (
    [event]
        name = start
        [lua]
            code=<<unit_test.fail()>>
        [/lua]
    [/event]
)}

# Test results other than direct pass/fail
{GENERIC_UNIT_TEST "test_lua_return_victory" (
    [event]
        name = start
        [lua]
            code=<<unit_test.finish('victory')>>
        [/lua]
    [/event]
)}
{GENERIC_UNIT_TEST "test_lua_return_defeat" (
    [event]
        name = start
        [lua]
            code=<<unit_test.finish('defeat')>>
        [/lua]
    [/event]
)}