#textdomain wesnoth-test
# This unit test is used for verify the work of abilities used like weapons, but also what leadership can be filtered by special_id_active attribute
# like weapons specials and abilities used like weapons.

{GENERIC_UNIT_TEST "swarm_disables_upgrades_with_abilities_adjacent_leadership" (
#define FILTER_BOB
[filter_student]
    [filter_weapon]
        type=blade
        [and]
            special_id_active=leader_test_bob
        [/and]
    [/filter_weapon]
[/filter_student]
[filter_opponent]
    race=elf
    [filter_weapon]
        special_id_active=test_cth #for testing if special_id_active work with abilities used like weapons
    [/filter_weapon]
[/filter_opponent]
affect_self=no
affect_allies=yes
[affect_adjacent]
[/affect_adjacent]
#enddef
#define FILTER_ALICE
[filter_student]
    [filter_weapon]
        type=blade,pierce
    [/filter_weapon]
[/filter_student]
[filter_opponent]
    race=orc
[/filter_opponent]
affect_self=no
affect_allies=yes
[affect_adjacent]
[/affect_adjacent]
#enddef
    [event]
        name=start
        [unit]
        id=alex
        name=_"Alex"
        x,y=12,4
        type=Elvish Hero
        side=1
        [/unit]
        [unit]
        id=ben
        name=_"Ben"
        x,y=14,3
        type=Orcish Warrior
        side=2
        [/unit]
        [modify_unit]
            [filter]
            [/filter]
            max_hitpoints=100
            hitpoints=100
            attacks_left=1
        [/modify_unit]
        [object]
            silent=yes
            [effect]
                apply_to=new_ability
                [abilities]
                    [swarm]
                        swarm_attacks_max=1
                        swarm_attacks_min=1
                        {FILTER_BOB}
                    [/swarm]
                    [attacks]
                        value=10
                        {FILTER_BOB}
                    [/attacks]
                    [attacks]
                        add=13
                        {FILTER_BOB}
                    [/attacks]
                    [damage]
                        value=1
                        {FILTER_BOB}
                    [/damage]
                    [chance_to_hit]
                        value=100
                        {FILTER_BOB}
                    [/chance_to_hit]
                    [leadership]
                        id=leader_test_bob
                        value=100
                        cumulative=no
                        affect_self=no
                        [filter_weapon]
                            type=blade
                        [/filter_weapon]
                        [filter_second_weapon]
                            special_id_active=test_cth
                        [/filter_second_weapon]
                        [affect_adjacent]
                            [filter]
                                formula="level < other.level"
                            [/filter]
                        [/affect_adjacent]
                    [/leadership]
                [/abilities]
            [/effect]
            [filter]
                id=ben
            [/filter]
        [/object]
        [object]
            silent=yes
            [effect]
                apply_to=new_ability
                [abilities]
                    [attacks]
                        value=10
                        {FILTER_ALICE}
                    [/attacks]
                    [damage]
                        value=1
                        {FILTER_ALICE}
                    [/damage]
                    [chance_to_hit]
                        id=test_cth
                        value=100
                        {FILTER_ALICE}
                    [/chance_to_hit]
                    [leadership]
                        id=leader_test_alice
                        value=100
                        cumulative=no
                        affect_self=no
                        [filter_weapon]
                            type=blade,pierce
                        [/filter_weapon]
                        [affect_adjacent]
                            [filter]
                                formula="level < other.level"
                            [/filter]
                        [/affect_adjacent]
                    [/leadership]
                [/abilities]
            [/effect]
            [filter]
                id=alex
            [/filter]
        [/object]
        [object]
            silent=yes
            [filter]
                id=bob
            [/filter]
            [effect]
                apply_to=attack
                increase_attacks=12
            [/effect]
        [/object]

        [store_unit]
            [filter]
                id=alice
            [/filter]
            variable=a
            kill=yes
        [/store_unit]
        [store_unit]
            [filter]
                id=bob
            [/filter]
            variable=b
        [/store_unit]
        [unstore_unit]
            variable=a
            find_vacant=yes
            x,y=12,3
        [/unstore_unit]
        [store_unit]
            [filter]
                id=alice
            [/filter]
            variable=a
        [/store_unit]

        [do_command]
            [attack]
                weapon=0
                defender_weapon=0
                [source]
                    x,y=$a.x,$a.y
                [/source]
                [destination]
                    x,y=$b.x,$b.y
                [/destination]
            [/attack]
        [/do_command]
        [store_unit]
            [filter]
                id=alice
            [/filter]
            variable=a
        [/store_unit]
        [store_unit]
            [filter]
                id=bob
            [/filter]
            variable=b
        [/store_unit]
        {ASSERT ({VARIABLE_CONDITIONAL a.hitpoints equals 98})}
        {ASSERT ({VARIABLE_CONDITIONAL b.hitpoints equals 80})}
        {SUCCEED}
    [/event]
)}

#undef FILTER_BOB
#undef FILTER_ALICE
