# This unit test is used for verify what 'add' and 'sub' attributes work in [leadership] abilities
{GENERIC_UNIT_TEST "test_add_in_leadership_abilities" (
    [event]
        name=start
        [modify_unit]
            [filter]
            [/filter]
            max_hitpoints=100
            hitpoints=100
            attacks_left=1
        [/modify_unit]
        [object]
            silent=yes
            [effect]
                apply_to=new_ability
                [abilities]
                    [leadership]
                        id=leadership_pos
                        add=25
                        cumulative=no
                        affect_self=yes
                    [/leadership]
                    [attacks]
                        value=1
                    [/attacks]
                    [damage]
                        value=60
                    [/damage]
                    [chance_to_hit]
                        value=100
                    [/chance_to_hit]
                [/abilities]
            [/effect]
            [filter]
                id=alice
            [/filter]
        [/object]

        # Move Alice next to Bob
        [move_unit]
            id=alice
            to_location=2
        [/move_unit]
        # Fight
        [store_unit]
            [filter]
                id=bob
            [/filter]
            variable=b
        [/store_unit]
        [store_unit]
            [filter]
                id=alice
            [/filter]
            variable=a
        [/store_unit]
        [do_command]
            [attack]
                weapon=0
                defender_weapon=0
                [source]
                    x,y=$a.x,$a.y
                [/source]
                [destination]
                    x,y=$b.x,$b.y
                [/destination]
            [/attack]
        [/do_command]
        # Check results
        [store_unit]
            [filter]
                id=bob
            [/filter]
            variable=b
        [/store_unit]
        {ASSERT ({VARIABLE_CONDITIONAL b.hitpoints equals 25})}
        {SUCCEED}
    [/event]
)}

{GENERIC_UNIT_TEST "test_sub_in_leadership_abilities" (
    [event]
        name=start
        [modify_unit]
            [filter]
            [/filter]
            max_hitpoints=100
            hitpoints=100
            attacks_left=1
        [/modify_unit]
        [object]
            silent=yes
            [effect]
                apply_to=new_ability
                [abilities]
                    [leadership]
                        id=leadership_neg
                        sub=50
                        cumulative=no
                        affect_self=yes
                    [/leadership]
                    [attacks]
                        value=1
                    [/attacks]
                    [damage]
                        value=60
                    [/damage]
                    [chance_to_hit]
                        value=100
                    [/chance_to_hit]
                [/abilities]
            [/effect]
            [filter]
                id=bob
            [/filter]
        [/object]

        # Move Alice next to Bob
        [move_unit]
            id=alice
            to_location=2
        [/move_unit]
        # Fight
        [store_unit]
            [filter]
                id=bob
            [/filter]
            variable=b
        [/store_unit]
        [store_unit]
            [filter]
                id=alice
            [/filter]
            variable=a
        [/store_unit]
        [do_command]
            [attack]
                weapon=0
                defender_weapon=0
                [source]
                    x,y=$a.x,$a.y
                [/source]
                [destination]
                    x,y=$b.x,$b.y
                [/destination]
            [/attack]
        [/do_command]
        # Check results
        [store_unit]
            [filter]
                id=alice
            [/filter]
            variable=a
        [/store_unit]
        {ASSERT ({VARIABLE_CONDITIONAL a.hitpoints equals 70})}
        {SUCCEED}
    [/event]
)}
