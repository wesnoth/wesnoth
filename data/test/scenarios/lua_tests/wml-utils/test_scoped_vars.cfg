#####
# API(s) being tested: wml_utils.scoped_var
##
# Actions:
# Set test_var to 1.
# Declare a scoped variable of test_var.
# Set test_var to 5.
##
# Expected end state:
# After the scoped variable is declared, test_var has no assigned value.
# After the scope of the scoped variable ends, test_var's value is back to being 1 rather than 5.
#####
{GENERIC_UNIT_TEST "test_scoped_vars" (
    [event]
        name = prestart
		{VARIABLE test_var 1}
		#[inspect][/inspect]
		{ASSERT {VARIABLE_CONDITIONAL test_var equals 1}}
        [lua]
            code = <<
				local wml_utils = wesnoth.require "wml-utils"
				local var <close> = wml_utils.scoped_var("test_var")
				-- This runs the contents of [args] as WML actions
				wml_utils.handle_event_commands(...)
			>>
			[args]
				#[inspect][/inspect]
				{ASSERT {VARIABLE_CONDITIONAL test_var equals ""}}
				{VARIABLE test_var 5}
				#[inspect][/inspect]
				{ASSERT {VARIABLE_CONDITIONAL test_var equals 5}}
			[/args]
        [/lua]

		#[inspect][/inspect]
        {ASSERT {VARIABLE_CONDITIONAL test_var equals 1}}
		{SUCCEED}
    [/event]
)}
